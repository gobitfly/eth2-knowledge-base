openapi: 3.0.0
info:
  title: beaconcha.in Multi EVM API
  description: |-
    Supported networks: Ethereum (CL+EL), Gnosis (EL), Optimism. Some comments are in https://docs.google.com/document/d/1c0JXxsMj9qa_RfEG4ecodVlJZPYUayI8UBY8HyBFR7Q/edit?usp=sharing'
    
    To authenticate your API request beaconcha.in uses API Keys. Supply your API Key either by:
    - Setting the `Authorization` header in the following format: `Authorization: Bearer <your-api-key>`. (recommended)
    - Setting the URL query parameter in the following format: `api_key={your_api_key}`.\
      Example: `https://beaconcha.in/api/v2/example?field=value&api_key={your_api_key}`
  version: 2.4.0.lucca
  contact: {}
servers:
  - url: https://beaconcha.in
paths:
  /api/v2/healthz:
    get:
      description: Health endpoint for monitoring whether the explorer is synchronized.
      tags:
        - Health
      summary: Health of the explorer
      responses:
        '200':
          description: OK
          content:
            text/plain:
              schema:
                allOf:
                  - $ref: '#/components/schemas/APIHealthResponse'
  /api/v2/healthz-loadbalancer:
    get:
      description: Health endpoint for monitoring whether the explorer-api maintains a healthy connection to the database.
      tags:
        - Health
      summary: Health of the explorer-api
      responses:
        '200':
          description: OK
          content:
            text/plain:
              schema:
                type: string
  /api/i/login:
    post:
      tags:
        - Authentication
      description: |-
        **Internal only!!** Create a new login session.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
      responses:
        '200':
          description: OK. Session cookie is set.
          headers:
            location:
              schema:
                type: string
              description: Redirect location.
        '400':
          description: Bad Request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageResponse'
  /api/i/oauth/authorize:
    post:
      tags:
        - Authentication
      description: |-
        **Internal only!!** Create an authorization request using the Authorization Code Flow with PKCE. **Note:** This endpoint is the internal request sent after the `GET /authorize` (see [RFC 7636 Section 4.3](https://datatracker.ietf.org/doc/html/rfc7636#section-4.3)) request is approved by the user. This specific endpoint underlies no RFC specification. If the user approves, the response will automatically redirect the user.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                response_type:
                  type: string
                client_id:
                  type: string
                redirect_uri:
                  type: string
                scope:
                  type: string
                state:
                  type: string
                code_challenge:
                  type: string
                code_challenge_method:
                  type: string
      responses:
        '302':
          description: Found
          headers:
            location:
              schema:
                type: string
              description: Redirect location.
        '400':
          description: Bad Request. The request could not be processed because the `redirect_uri` parameter was invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageResponse'
  /api/v2/oauth/token:
    post:
      tags:
        - Authentication
      description: |-
        Get an access token using either the [Authorization Code Flow with PKCE](https://datatracker.ietf.org/doc/html/rfc7636#section-4.5) or a [Refresh Token](https://datatracker.ietf.org/doc/html/rfc6749#section-6).
      requestBody:
        required: true
        description: Please note that the media type must be `application/x-www-form-urlencoded`, **not** JSON.
        content:
          application/x-www-form-urlencoded:
            schema:
              oneOf:
                - type: object
                  properties:
                    grant_type:
                      type: string
                    client_id:
                      type: string
                    code:
                      type: string
                    code_verifier:
                      type: string
                    redirect_uri:
                      type: string
                - type: object
                  properties:
                    grant_type:
                      type: string
                    refresh_token:
                      type: string
                    scope:
                      type: string
            examples:
              Authorization Code Flow with PKCE:
                value:
                  grant_type: authorization_code
                  client_id: string
                  code: string
                  code_verifier: string
                  redirect_url: string
              Refresh Token:
                value:
                  grant_type:  refresh_token
                  refresh_token: string
                  scope: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      access_token:
                        type: string
                      refresh_token:
                        type: string
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageResponse'
  /api/i/oauth/token:
    post:
      tags:
        - Authentication
      description: |-
        **For web frontend login only!** Exchange user credentials for a token using the Resource Owner Password Flow. See [RFC 6749 Section 4.3.2](https://datatracker.ietf.org/doc/html/rfc6749#section-4.3.2) for a detailed description of the specifications.
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                grant_type:
                  type: string
                username:
                  type: string
                password:
                  type: string
                scope:
                  type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      access_token:
                        type: string
                      refresh_token:
                        type: string
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageResponse'
  /api/i/users/me/api-keys:
    post:
      tags:
        - Authentication
      description: |-
        Create a new API key, used for public API endpoints.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                scope:
                  type: string
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      data:
                        type: object
                        properties:
                          api_key:
                            type: string
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageResponse'
  /api/i/ad-configurations:
    post:
      tags:
        - Ad Configurations
      description: Create a new ad configuration.
      requestBody:
        required: true
        description: |-
          `key`: Provide a key for the ad configuration. Does not need to be unique.

          `jquery_selector`: Provide a jQuery selector for the ad configuration.

          `insert_mode`: Provide the insert mode for the ad configuration. Possible values are `before`, `after`, `replace`, `insert`.

          `refresh_interval`: Provide the refresh interval for the ad configuration in seconds.

          `for_all_users`: Provide whether the ad configuration is for all users, even if they have NoAds enabled.

          `banner_id`: Provide the banner id for the ad configuration. Mutually exclusive with `html_content`.

          `html_content`: Provide the html content for the ad configuration. Mutually exclusive with `banner_id`.

          `enabled`: Provide whether the ad configuration is enabled.
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/AdConfigurationResponse'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/AdConfigurationResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageResponse'
    get:
      tags:
        - Ad Configurations
      description: Get a list of ad configurations.
      parameters:
        - name: keys
          in: query
          description: Provide a comma seperated list of keys to filter the ad configurations by. If ommited, all ad configurations will be returned.
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/AdConfigurationResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageResponse'
  /api/i/ad-configurations/{key}:
    put:
      tags:
        - Ad Configurations
      description: Update an existing ad configuration.
      parameters:
        - name: key
          in: path
          description: Provide the key of the ad configuration to update.
          required: true
          schema:
            type: string
      requestBody:
        required: true
        description: |-
          `jquery_selector`: Provide a jQuery selector for the ad configuration.

          `insert_mode`: Provide the insert mode for the ad configuration. Possible values are `before`, `after`, `replace`, `insert`.

          `refresh_interval`: Provide the refresh interval for the ad configuration in seconds.

          `for_all_users`: Provide whether the ad configuration is for all users, even if they have NoAds enabled.

          `banner_id`: Provide the banner id for the ad configuration. Mutually exclusive with `html_content`.

          `html_content`: Provide the html content for the ad configuration. Mutually exclusive with `banner_id`.

          `enabled`: Provide whether the ad configuration is enabled.
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/AdConfigurationResponse'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/AdConfigurationResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageResponse'
    delete:
      tags:
        - Ad Configurations
      description: Delete an ad configuration.
      parameters:
        - name: key
          in: path
          description: Provide the key of the ad configuration to update.
          required: true
          schema:
            type: string
      responses:
        '204':
          description: No Content. The request was successful.
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageResponse'
  /api/v2/users/me/dashboards:
    get:
      tags:
        - Dashboards
      description: Get a list of dashboards associated with the authenticated user.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      data:
                        type: object
                        properties:
                          validator_dashboards:
                            type: array
                            items:
                              $ref: '#/components/schemas/Dashboard'
                          account_dashboards:
                            type: array
                            items:
                              $ref: '#/components/schemas/Dashboard'
  /api/i/search:
    post:
      tags:
        - Search
      description: |-
        Search endpoint. Request body fields:
        - `input` - Provide the search query.
        - `networks` (optional) - Provide an array of network names or chain IDs to filter results by.
        - `types` (optional) - Provide an array of types to filter results by. Possible options:
          - `validator_by_index`
          - `validator_by_public_key`
          - `validators_by_deposit_address`
          - `validators_by_deposit_ens_name`
          - `validators_by_withdrawal_credential`
          - `validators_by_withdrawal_address`
          - `validators_by_withdrawal_ens`
          - `validators_by_graffiti`
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                input:
                  type: string
                networks:
                  type: array
                  items:
                    type: integer
                    format: int64
                types:
                  type: array
                  items:
                    type: string
                include_validators:
                  type: boolean
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  type:
                    type: string
                  chain_id:
                    type: integer
                    format: int64
                  hash_value:
                    type: string
                    nullable: true
                  str_value:
                    type: string
                    nullable: true
                  num_value:
                    type: integer
                    format: int64
                    nullable: true
                  validators:
                    type: array
                    items:
                      type: integer
                      format: int64
                    nullable: true
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageResponse'
  /api/v2/account-dashboards:
    post:
      tags:
        - Account Dashboards
      description: Create a new account dashboard. **Note:** New dashboards will automatically have a default group created.
      requestBody:
        required: true
        description: |-
          `name`: Specify the name of the dashboard.
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      data:
                        type: object
                        properties:
                          id:
                            type: string
                          name:
                            type: string
        '400':
          description: Bad Request. The request could not be performed by the server due to invalid parameters.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageResponse'
        '409':
          description: Conflict. The request could not be performed by the server because the authenticated user has already reached their dashboard limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageResponse'
  /api/v2/account-dashboards/{dashboard_id}:
    get:
      tags:
        - Account Dashboards
      description: Get overview information for a specified dashboard
      parameters:
        - $ref: '#/components/parameters/DashboardIdPath'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      data:
                        type: object
                        properties:
                          groups:
                            type: array
                            items:
                              type: object
                              properties:
                                id:
                                  type: number
                                name:
                                  type: string
                          accounts:
                            type: array
                            items:
                              type: object
                              properties:
                                address:
                                  type: string
                                group_id:
                                  type: number
        '400':
          description: Bad Request. The request could not be performed by the server due to malformed syntax.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageResponse'
    delete:
      tags:
        - Account Dashboards
      description: Delete a specified account dashboard
      parameters:
        - $ref: '#/components/parameters/DashboardIdPath'
      responses:
        '204':
          description: No Content. The request was successful.
        '400':
          description: Bad Request. The request could not be performed by the server due to malformed syntax.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageResponse'
  /api/v2/account-dashboards/{dashboard_id}/groups:
    post:
      tags:
        - Account Dashboards
      description: Create a new group in a specified account dashboard
      parameters:
        - $ref: '#/components/parameters/DashboardIdPath'
      requestBody:
        required: true
        description: |-
          `name`: Specify the name of the group.
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      data:
                        type: object
                        properties:
                          id:
                            type: string
                          name:
                            type: string
        '400':
          description: Bad Request. The request could not be performed by the server due to malformed syntax or invalid parameters.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageResponse'
        '409':
          description: Conflict. The request could not be performed by the server because the authenticated user has already reached their dashboard group limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageResponse'
  /api/v2/account-dashboards/{dashboard_id}/groups/{group_id}:
    put:
      tags:
        - Account Dashboards
      description: Update a group's name in a specified account dashboard
      parameters:
        - $ref: '#/components/parameters/DashboardIdPath'
        - $ref: '#/components/parameters/GroupIdPath'
      requestBody:
        required: true
        description: |-
          `name`: Specify the name of the group.
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      data:
                        type: object
                        properties:
                          id:
                            type: string
                          name:
                            type: string
        '400':
          description: Bad Request. The request could not be performed by the server due to malformed syntax or invalid parameters.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageResponse'
    delete:
      tags:
        - Account Dashboards
      description: Delete a specified group in a specified dashboard. All included accounts will be moved to the default group.
      parameters:
        - $ref: '#/components/parameters/DashboardIdPath'
        - $ref: '#/components/parameters/GroupIdPath'
      responses:
        '204':
          description: No Content. The request was successful.
        '400':
          description: Bad Request. The request could not be performed by the server due to malformed syntax.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageResponse'
  /api/v2/account-dashboards/{dashboard_id}/accounts:
    post:
      tags:
        - Account Dashboards
      description: Add new accounts to a specified dashboard or update the group of already-added accounts.
      parameters:
        - $ref: '#/components/parameters/DashboardIdPath'
      requestBody:
        description: |-
          `accounts`: Provide an array of account addresses that should get added.

          `group_id`: (optional) Provide a single group id, to which all accounts get added to. If ommited, the default group will be used.
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                accounts:
                  type: array
                  items:
                    type: string
                group_id:
                  type: number
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          type: object
                          properties:
                            public_key:
                              type: string
                            group_id:
                              type: number
        '400':
          description: Bad Request. The request could not be performed by the server due to malformed syntax or invalid parameters.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageResponse'
        '409':
          description: Conflict. The request could not be performed by the server because the authenticated user has already reached their dashboard accounts limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageResponse'
    get:
      tags:
        - Account Dashboards
      description: Get a list of accounts for a specified dashboard
      parameters:
        - $ref: '#/components/parameters/DashboardIdPath'
        - $ref: '#/components/parameters/NetworkParameter'
        - $ref: '#/components/parameters/CursorParameter'
        - $ref: '#/components/parameters/LimitParameter'
        - $ref: '#/components/parameters/SortParameter'
        - $ref: '#/components/parameters/SearchParameter'
      responses:
        '200':
          description: OK. TODO Response Object
        '400':
          description: Bad Request. The request could not be performed by the server due to malformed syntax.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageResponse'
    delete:
      tags:
        - Account Dashboards
      description: Remove specific accounts from a dashboard
      parameters:
        - $ref: '#/components/parameters/DashboardIdPath'
        - name: accounts
          in: query
          description: |-
            Provide a comma seperated list of accounts that should get removed. If ommited, all accounts will be removed from the dashboard.

            **Internal Note:** should have request body for extensive requests like `PUT /api/i/notification-dashboards/{dashboard_id}/validators/events`, but OpenAPI 3.0 standard forbids request body for `DELETE` endpoints.
          schema:
            type: string
      responses:
        '204':
          description: No Content. The request was successful.
        '400':
          description: Bad Request. Bad Request. The request could not be performed by the server due to malformed syntax or invalid parameters.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageResponse'
  /api/v2/account-dashboards/{dashboard_id}/accounts/{address}:
    put:
      tags:
        - Account Dashboards
      description: |-
        Set the color associated with a specific account, which will be visible on the transactions table on the frontend. 

        **Internal note:** Maybe we won't document this publicly.
      parameters:
        - $ref: '#/components/parameters/DashboardIdPath'
        - $ref: '#/components/parameters/AddressParameter'
      requestBody:
        description: '`color`: Provide the hex color in the format `#FFFFFF`.'
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                color:
                  type: string
                visible:
                  type: boolean
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request. The request could not be performed by the server due to malformed syntax or invalid parameters.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageResponse'
  /api/v2/account-dashboards/{dashboard_id}/public-ids:
    post:
      tags:
        - Account Dashboards
      description: Create a new public ID for a specified dashboard. This token can be used as an ID by other users for non-modyfing (i.e. GET) endpoints only. Currently limited to one per dashboard.
      parameters:
        - $ref: '#/components/parameters/DashboardIdPath'
      requestBody:
        required: true
        description: |-
          `name`: Provide a public name for the dashboard

          `share_settings`:

          - `group_names`: If set to `true`, group names are shown publicly.

          - `transactions_table_settings`: if set to `true`, the settings for the transactions table are used publicly.
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                share_settings:
                  type: object
                  properties:
                    group_names:
                      type: boolean
                    transactions_table_settings:
                      type: boolean
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      data:
                        type: object
                        properties:
                          access_token:
                            type: string
                          name:
                            type: string
                          share_settings:
                            type: object
                            properties:
                              group_names:
                                type: boolean
                              transactions_table_settings:
                                type: boolean
        '400':
          description: Bad Request. The request could not be performed by the server due to malformed syntax or invalid parameters.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageResponse'
        '409':
          description: Conflict. The request could not be performed by the server because the authenticated user has already reached their public ID limit for this dashboard.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageResponse'
  /api/v2/account-dashboards/{dashboard_id}/public-ids/{public_dashboard_id}:
    put:
      tags:
        - Account Dashboards
      description: Update a specified public ID for a specified dashboard.
      parameters:
        - $ref: '#/components/parameters/DashboardIdPath'
        - $ref: '#/components/parameters/DashboardTokenPath'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                share_settings:
                  type: object
                  properties:
                    group_names:
                      type: boolean
                    transactions_table_settings:
                      type: boolean
      responses:
        '200':
          description: OK.
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      data:
                        type: object
                        properties:
                          access_token:
                            type: string
                          share_settings:
                            type: object
                            properties:
                              group_names:
                                type: boolean
                              transactions_table_settings:
                                type: boolean
        '400':
          description: Bad Request. The request could not be performed by the server due to malformed syntax or invalid parameters.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageResponse'
    delete:
      tags:
        - Account Dashboards
      description: Delete a public public ID for a specified dashboard.
      parameters:
        - $ref: '#/components/parameters/DashboardIdPath'
        - $ref: '#/components/parameters/DashboardTokenPath'
      responses:
        '204':
          description: No Content. The request was successful.
        '400':
          description: Bad Request. The request could not be performed by the server due to malformed syntax.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageResponse'
  /api/v2/account-dashboards/{dashboard_id}/transactions:
    get:
      tags:
        - Account Dashboards
      description: Get a list of the latest transactions associated with a dashboards accounts.
      parameters:
        - $ref: '#/components/parameters/DashboardIdPath'
        - $ref: '#/components/parameters/DashboardGroupParameter'
        - $ref: '#/components/parameters/HideSpamParameter'
        - $ref: '#/components/parameters/NetworkParameter'
        - $ref: '#/components/parameters/TokenParameter'
        - $ref: '#/components/parameters/MethodParameter'
        - $ref: '#/components/parameters/TransactionDirectionParameter'
        - $ref: '#/components/parameters/TransactionTypeParameter'
        - $ref: '#/components/parameters/StartDateParameter'
        - $ref: '#/components/parameters/EndDateParameter'
        - $ref: '#/components/parameters/StartBlockParameter'
        - $ref: '#/components/parameters/EndBlockParameter'
        - $ref: '#/components/parameters/CursorParameter'
        - $ref: '#/components/parameters/LimitParameter'
        - $ref: '#/components/parameters/SortParameter'
        - $ref: '#/components/parameters/SearchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/PagingResponse'
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/EthereumTransactionResponse'
        '400':
          description: Bad Request. The request could not be performed by the server due to malformed syntax or invalid parameters.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageResponse'
  /api/v2/account-dashboards/{dashboard_id}/transactions/settings:
    put:
      tags:
        - Account Dashboards
      description: Update the settings for a specified dashboard's transactions table.
      parameters:
        - $ref: '#/components/parameters/DashboardIdPath'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                shown_columns:
                  type: object
                  properties:
                    method:
                      type: boolean
                    time:
                      type: boolean
                    type:
                      type: boolean
                    token:
                      type: boolean
                    from:
                      type: boolean
                    to:
                      type: boolean
                    tx_fee:
                      type: boolean
                historical_values_enabled:
                  type: boolean
                ens_names_enabled:
                  type: boolean
                time_zone:
                  type: string
      responses:
        '200':
          description: OK. TODO response object
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageResponse'
  /api/v2/validator-dashboards:
    post:
      tags:
        - Validator Dashboards
      description: Create a new validator dashboard. **Note:** New dashboards will automatically have a default group created.
      requestBody:
        required: true
        description: |-
          `name`: Specify the name of the dashboard.
          
          `network`: Specify the network for the dashboard. Possible options are:
            - `ethereum`
            - `gnosis`
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                network:
                  type: string
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      data:
                        type: object
                        properties:
                          id:
                            type: number
                          user_id:
                            type: number
                          network:
                            type: string
                          name:
                            type: string
                          created_at:
                            type: string
                            format: date-time
        '400':
          description: Bad Request. The request could not be performed by the server due to invalid parameters.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageResponse'
        '409':
          description: Conflict. The request could not be performed by the server because the authenticated user has already reached their dashboard limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageResponse'
  /api/v2/validator-dashboards/{dashboard_id}:
    get:
      tags:
        - Validator Dashboards
      description: Get overview information for a specified dashboard
      parameters:
        - $ref: '#/components/parameters/DashboardIdPath'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      data:
                        type: object
                        properties:
                          groups:
                            type: array
                            items:
                              type: object
                              properties:
                                id:
                                  type: number
                                name:
                                  type: string
                          validators:
                            type: object
                            properties:
                              total:
                                type: number
                              active:
                                type: string
                              exited:
                                type: string
                              slashed:
                                type: number
                          efficiency:
                            type: number
                          rewards:
                            type: object
                            properties:
                              total:
                                type: number
                              7d:
                                type: number
                              31d:
                                type: number
                              365d:
                                type: number
                          luck:
                            type: object
                            properties:
                              proposal:
                                type: number
                              sync:
                                type: number
                          apr:
                            type: object
                            properties:
                              total:
                                type: number
                              7d:
                                type: number
                              31d:
                                type: number
                              365d:
                                type: number
        '400':
          description: Bad Request. The request could not be performed by the server due to malformed syntax.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageResponse'
    delete:
      tags:
        - Validator Dashboards
      description: Delete a specified validator dashboard
      parameters:
        - $ref: '#/components/parameters/DashboardIdPath'
      responses:
        '204':
          description: No Content. The request was successful.
        '400':
          description: Bad Request. The request could not be performed by the server due to malformed syntax.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageResponse'
  /api/v2/validator-dashboards/{dashboard_id}/name:
    put:
      tags:
        - Validator Dashboards
      description: Update the name of a specified validator dashboard
      parameters:
        - $ref: '#/components/parameters/DashboardIdPath'
      requestBody:
        required: true
        description: |-
          `name`: Specify the new name of the validator dashboard.
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
      responses:
        '200':
          description: OK. Returns the validator dashboard object
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      data:
                        type: object
                        properties:
                          id:
                            type: number
                          user_id:
                            type: number
                          network:
                            type: string
                          name:
                            type: string
                          created_at:
                            type: string
                            format: date-time
        '400':
          description: Bad Request. The request could not be performed by the server due to malformed syntax or invalid parameters.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageResponse'
  /api/v2/validator-dashboards/{dashboard_id}/groups:
    post:
      tags:
        - Validator Dashboards
      description: Create a new group in a specified validator dashboard
      parameters:
        - $ref: '#/components/parameters/DashboardIdPath'
      requestBody:
        required: true
        description: |-
          `name`: Specify the name of the group.
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      data:
                        type: object
                        properties:
                          id:
                            type: string
                          name:
                            type: string
        '400':
          description: Bad Request. The request could not be performed by the server due to malformed syntax or invalid parameters.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageResponse'
        '409':
          description: Conflict. The request could not be performed by the server because the authenticated user has already reached their dashboard group limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageResponse'
  /api/v2/validator-dashboards/{dashboard_id}/groups/{group_id}:
    put:
      tags:
        - Validator Dashboards
      description: Update a group's name in a specified validator dashboard
      parameters:
        - $ref: '#/components/parameters/DashboardIdPath'
        - $ref: '#/components/parameters/GroupIdPath'
      requestBody:
        required: true
        description: |-
          `name`: Specify the name of the group.
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      data:
                        type: object
                        properties:
                          id:
                            type: string
                          name:
                            type: string
        '400':
          description: Bad Request. The request could not be performed by the server due to malformed syntax or invalid parameters.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageResponse'
    delete:
      tags:
        - Validator Dashboards
      description: Delete a specified group in a specified dashboard. All included validators will be moved to the default group.
      parameters:
        - $ref: '#/components/parameters/DashboardIdPath'
        - $ref: '#/components/parameters/GroupIdPath'
      responses:
        '204':
          description: No Content. The request was successful.
        '400':
          description: Bad Request. The request could not be performed by the server due to malformed syntax.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageResponse'
  /api/v2/validator-dashboards/{dashboard_id}/validators:
    post:
      tags:
        - Validator Dashboards
      description: Add new validators to a specified dashboard or update the group of already-added validators.
      parameters:
        - $ref: '#/components/parameters/DashboardIdPath'
      requestBody:
        description: |-
          `validators`: Provide a comma seperated list of validator indicies or public keys that should get added.

          `group_id`: (optional) Provide a single group id, to which all validators get added to. If ommited, the default group will be used.
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                validators:
                  type: array
                  items:
                    type: string
                group_id:
                  type: number
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          type: object
                          properties:
                            public_key:
                              type: string
                            group_id:
                              type: number
        '400':
          description: Bad Request. The request could not be performed by the server due to malformed syntax or invalid parameters.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageResponse'
        '409':
          description: Conflict. The request could not be performed by the server because the authenticated user has already reached their dashboard validators limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageResponse'
    get:
      tags:
        - Validator Dashboards
      description: Get a list of validators for a specified dashboard
      parameters:
        - $ref: '#/components/parameters/DashboardIdPath'
        - $ref: '#/components/parameters/GroupIdQuery'
        - $ref: '#/components/parameters/CursorParameter'
        - $ref: '#/components/parameters/LimitParameter'
        - $ref: '#/components/parameters/SortParameter'
        - $ref: '#/components/parameters/SearchParameter'
      responses:
        '200':
          description: OK. TODO Response Object
        '400':
          description: Bad Request. The request could not be performed by the server due to malformed syntax.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageResponse'
    delete:
      tags:
        - Validator Dashboards
      description: Remove validators from a dashboard
      parameters:
        - $ref: '#/components/parameters/DashboardIdPath'
        - name: validators
          in: query
          description: |-
            Provide a comma seperated list of validator indices or public keys that should get removed.

          schema:
            type: string
      responses:
        '204':
          description: No Content. The request was successful.
        '400':
          description: Bad Request. Bad Request. The request could not be performed by the server due to malformed syntax or invalid parameters.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageResponse'
  /api/v2/validator-dashboards/{dashboard_id}/public-ids:
    post:
      tags:
        - Validator Dashboards
      description: Create a new public ID for a specified dashboard. This token can be used as an ID by other users for non-modyfing (i.e. GET) endpoints only. Currently limited to one per dashboard.
      parameters:
        - $ref: '#/components/parameters/DashboardIdPath'
      requestBody:
        required: true
        description: |-
          `name`: Provide a public name for the dashboard

          `share_settings`:

          - `group_names`: If set to `true`, group names are shown publicly.
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                share_settings:
                  type: object
                  properties:
                    group_names:
                      type: boolean
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PublicIdResponse'
        '400':
          description: Bad Request. The request could not be performed by the server due to malformed syntax or invalid parameters.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageResponse'
        '409':
          description: Conflict. The request could not be performed by the server because the authenticated user has already reached their public ID limit for this dashboard.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageResponse'
  /api/v2/validator-dashboards/{dashboard_id}/public-ids/{public_dashboard_id}:
    put:
      tags:
        - Validator Dashboards
      description: Update a specified public ID for a specified dashboard.
      parameters:
        - $ref: '#/components/parameters/DashboardIdPath'
        - $ref: '#/components/parameters/DashboardTokenPath'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                share_settings:
                  type: object
                  properties:
                    group_names:
                      type: boolean
      responses:
        '200':
          description: OK.
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      data:
                        type: object
                        properties:
                          access_token:
                            type: string
                          share_settings:
                            type: object
                            properties:
                              group_names:
                                type: boolean
        '400':
          description: Bad Request. The request could not be performed by the server due to malformed syntax or invalid parameters.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageResponse'
    delete:
      tags:
        - Validator Dashboards
      description: Delete a public public ID for a specified dashboard.
      parameters:
        - $ref: '#/components/parameters/DashboardIdPath'
        - $ref: '#/components/parameters/DashboardTokenPath'
      responses:
        '204':
          description: No Content. The request was successful.
        '400':
          description: Bad Request. The request could not be performed by the server due to malformed syntax.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageResponse'
  /api/v2/validator-dashboards/{dashboard_id}/slot-viz:
    get:
      tags:
        - Validator Dashboards
      description: Get slot viz information for a specified dashboard
      parameters:
        - $ref: '#/components/parameters/DashboardIdPath'
      responses:
        '200':
          description: OK. TODO Return object
        '400':
          description: Bad Request. The request could not be performed by the server due to malformed syntax.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageResponse'
  /api/v2/validator-dashboards/{dashboard_id}/summary:
    get:
      tags:
        - Validator Dashboards
      description: Get a list of summaries of the last 24 hours, 7 days, 31 days and all time for each group in a specified validator dashboard.
      parameters:
        - $ref: '#/components/parameters/DashboardIdPath'
        - $ref: '#/components/parameters/CursorParameter'
        - $ref: '#/components/parameters/LimitParameter'
        - $ref: '#/components/parameters/SortParameter'
        - $ref: '#/components/parameters/SearchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/PagingResponse'
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/DashboardSummaryResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageResponse'
  /api/v2/validator-dashboards/{dashboard_id}/groups/{group_id}/summary:
    get:
      tags:
        - Validator Dashboards
      description: Get a detailed summary of a specified group in a specified dashboard.
      parameters:
        - $ref: '#/components/parameters/DashboardIdPath'
        - $ref: '#/components/parameters/GroupIdPath'
      responses:
        '200':
          description: OK. TODO Response
        '400':
          description: Bad Request. The request could not be performed by the server due to malformed syntax.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageResponse'
  /api/v2/validator-dashboards/{dashboard_id}/summary-chart:
    get:
      tags:
        - Validator Dashboards
      description: Get summary chart data for each group in a specified validator dashboard.
      parameters:
        - $ref: '#/components/parameters/DashboardIdPath'
      responses:
        '200':
          description: OK. TODO response object
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageResponse'
  /api/v2/validator-dashboards/{dashboard_id}/validator-indices:
    get:
      tags:
        - Validator Dashboards
      description: Get a list of all validator indices contained in a specified validator dashboard.
      parameters:
        - $ref: '#/components/parameters/DashboardIdPath'
        - $ref: '#/components/parameters/GroupIdQuery'
        - name: duty
          in: query
          required: false
          description: |-
            Filter results by duty. Possible options are:
            - `sync`
            - `proposal`
            - `slashed`
          schema:
            type: string
        - name: period
          in: query
          required: false
          description: |-
            Filter results by how long ago the duty happened. Possible options are:
            - `24h`
            - `7d`
            - `30d`
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          type: number
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageResponse'
  /api/v2/validator-dashboards/{dashboard_id}/rewards:
    get:
      tags:
        - Validator Dashboards
      description: Get an aggregated list of the latest validator rewards associated with a specified dashboard.
      parameters:
        - $ref: '#/components/parameters/DashboardIdPath'
        - $ref: '#/components/parameters/CursorParameter'
        - $ref: '#/components/parameters/LimitParameter'
        - $ref: '#/components/parameters/SortParameter'
        - $ref: '#/components/parameters/SearchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          type: object
                          properties:
                            epoch:
                              type: integer
                            epoch_start_date_time:
                              type: string
                              format: date-time
                            daily:
                              type: boolean
                            date:
                              type: string
                              format: date
                            rewards:
                              $ref: '#/components/schemas/EthereumValidatorReward'
                  - $ref: '#/components/schemas/PagingResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageResponse'
  /api/v2/validator-dashboards/{dashboard_id}/rewards-chart:
    get:
      tags:
        - Validator Dashboards
      description: Get summary chart data for each group in a specified validator dashboard.
      parameters:
        - $ref: '#/components/parameters/DashboardIdPath'
      responses:
        '200':
          description: OK. TODO response object
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageResponse'
  /api/v2/validator-dashboards/{dashboard_id}/duties/{epoch}:
    get:
      tags:
        - Validator Dashboards
      description: Get a list of duties for all validators of a specified dashboard in a specified epoch.
      parameters:
        - $ref: '#/components/parameters/DashboardIdPath'
        - $ref: '#/components/parameters/EpochNumbersParameter'
        - $ref: '#/components/parameters/GroupIdQuery'
        - $ref: '#/components/parameters/CursorParameter'
        - $ref: '#/components/parameters/LimitParameter'
        - $ref: '#/components/parameters/SortParameter'
        - $ref: '#/components/parameters/SearchParameter'
      responses:
        '200':
          description: OK. TODO Return object
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/PagingResponse'
                  - type: object
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageResponse'
  /api/v2/validator-dashboards/{dashboard_id}/blocks:
    get:
      tags:
        - Validator Dashboards
      description: Get a list of blocks produced by validators in a specified dashboard.
      parameters:
        - $ref: '#/components/parameters/DashboardIdPath'
        - $ref: '#/components/parameters/CursorParameter'
        - $ref: '#/components/parameters/LimitParameter'
        - $ref: '#/components/parameters/SortParameter'
        - $ref: '#/components/parameters/SearchParameter'
      responses:
        '200':
          description: OK. TODO Return object
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/PagingResponse'
                  - type: object
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageResponse'
  /api/v2/validator-dashboards/{dashboard_id}/epoch-heatmap:
    get:
      tags:
        - Validator Dashboards
      description: Get a list of heatmap information for validators in a specified dashboard.
      parameters:
        - $ref: '#/components/parameters/DashboardIdPath'
      responses:
        '200':
          description: OK. TODO Return object
          content:
            application/json:
              schema:
                allOf:
                  - type: object
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageResponse'
  /api/v2/validator-dashboards/{dashboard_id}/daily-heatmap:
    get:
      tags:
        - Validator Dashboards
      description: Get a list of heatmap information for validators in a specified dashboard.
      parameters:
        - $ref: '#/components/parameters/DashboardIdPath'
        - name: period
          in: query
          required: false
          description: |-
            The period of time to get the data for. Possible options are:
            - `7d`
            - `30d`
            - `365d`
          schema:
            type: string
      responses:
        '200':
          description: OK. TODO Return object
          content:
            application/json:
              schema:
                allOf:
                  - type: object
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageResponse'
  /api/v2/validator-dashboards/{dashboard_id}/groups/{group_id}/epoch-heatmap/{epoch}:
    get:
      tags:
        - Validator Dashboards
      description: Get heatmap tooltip information for a specified epoch of a specified group in a specified dashboard.
      parameters:
        - $ref: '#/components/parameters/DashboardIdPath'
        - $ref: '#/components/parameters/GroupIdPath'
        - $ref: '#/components/parameters/EpochNumbersParameter'
      responses:
        '200':
          description: OK. TODO Return object
          content:
            application/json:
              schema:
                allOf:
                  - type: object
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageResponse'
  /api/v2/validator-dashboards/{dashboard_id}/groups/{group_id}/daily-heatmap/{date}:
    get:
      tags:
        - Validator Dashboards
      description: Get heatmap tooltip information for a specified epoch of a specified group in a specified dashboard.
      parameters:
        - $ref: '#/components/parameters/DashboardIdPath'
        - $ref: '#/components/parameters/GroupIdPath'
        - name: date
          in: path
          required: true
          description: |-
            The date to get the heatmap information for. Must be in the format `YYYY-MM-DD`.
          schema:
            type: string
            format: date
      responses:
        '200':
          description: OK. TODO Return object
          content:
            application/json:
              schema:
                allOf:
                  - type: object
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageResponse'
  /api/v2/validator-dashboards/{dashboard_id}/execution-layer-deposits:
    get:
      tags:
        - Validator Dashboards
      description: Get a list of execution layer deposits for validators in a specified dashboard.
      parameters:
        - $ref: '#/components/parameters/DashboardIdPath'
        - $ref: '#/components/parameters/CursorParameter'
        - $ref: '#/components/parameters/LimitParameter'
        - $ref: '#/components/parameters/SearchParameter'
      responses:
        '200':
          description: OK. TODO Return object
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/PagingResponse'
                  - type: object
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageResponse'
  /api/v2/validator-dashboards/{dashboard_id}/consensus-layer-deposits:
    get:
      tags:
        - Validator Dashboards
      description: Get a list of consensus layer deposits for validators in a specified dashboard.
      parameters:
        - $ref: '#/components/parameters/DashboardIdPath'
        - $ref: '#/components/parameters/CursorParameter'
        - $ref: '#/components/parameters/LimitParameter'
        - $ref: '#/components/parameters/SearchParameter'
      responses:
        '200':
          description: OK. TODO Return object
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/PagingResponse'
                  - type: object
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageResponse'
  /api/v2/validator-dashboards/{dashboard_id}/total-execution-layer-deposits:
    get:
      tags:
        - Validator Dashboards
      description: Get the total deposited amount for a validator dashboard.
      parameters:
        - $ref: '#/components/parameters/DashboardIdPath'
      responses:
        '200':
          description: OK. TODO Return object
          content:
            application/json:
              schema:
                allOf:
                  - type: object
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageResponse'
  /api/v2/validator-dashboards/{dashboard_id}/total-consensus-layer-deposits:
    get:
      tags:
        - Validator Dashboards
      description: Get the total deposited amount for a validator dashboard.
      parameters:
        - $ref: '#/components/parameters/DashboardIdPath'
      responses:
        '200':
          description: OK. TODO Return object
          content:
            application/json:
              schema:
                allOf:
                  - type: object
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageResponse'
  /api/v2/validator-dashboards/{dashboard_id}/withdrawals:
    get:
      tags:
        - Validator Dashboards
      description: Get a list of withdrwawals associated with validators in a specified dashboard.
      parameters:
        - $ref: '#/components/parameters/DashboardIdPath'
        - $ref: '#/components/parameters/CursorParameter'
        - $ref: '#/components/parameters/LimitParameter'
        - $ref: '#/components/parameters/SortParameter'
        - $ref: '#/components/parameters/SearchParameter'
      responses:
        '200':
          description: OK. TODO Return object
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/PagingResponse'
                  - type: object
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageResponse'
  /api/v2/validator-dashboards/{dashboard_id}/total-withdrawals:
    get:
      tags:
        - Validator Dashboards
      description: Get the total withdrawn amount for a validator dashboard.
      parameters:
        - $ref: '#/components/parameters/DashboardIdPath'
      responses:
        '200':
          description: OK. TODO Return object
          content:
            application/json:
              schema:
                allOf:
                  - type: object
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageResponse'
  /api/i/notification-dashboards/{dashboard_id}/settings:
    put:
      tags:
        - Notification Dashboards (WIP, don't use)
      description: Update the general notification settings for the authenticated user.
      parameters:
        - $ref: '#/components/parameters/DashboardIdPath'
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                do_not_disturb:
                  type: object
                  properties:
                    enabled:
                      type: boolean
                    expire_in_hours:
                      type: number
                enabled_notifications:
                  type: object
                  properties:
                    email:
                      type: boolean
                    push:
                      type: boolean
                    webhook:
                      type: boolean
                webhoooks:
                  type: array
                  items:
                    type: string
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request. The request could not be performed by the server due to malformed syntax or invalid parameters.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageResponse'
  /api/i/notification-dashboards/{dashboard_id}/validators:
    get:
      tags:
        - Notification Dashboards (WIP, don't use)
      description: Get a list of validator notification subscription associated with this user.
      parameters:
        - $ref: '#/components/parameters/DashboardIdPath'
        - $ref: '#/components/parameters/CursorParameter'
        - $ref: '#/components/parameters/LimitParameter'
        - $ref: '#/components/parameters/SortParameter'
        - $ref: '#/components/parameters/SearchParameter'
      responses:
        '200':
          description: Created
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/PagingResponse'
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          type: object
                          properties:
                            public_key:
                              type: string
                            index:
                              type: number
                            events:
                              type: array
                              items:
                                type: string
                            group_id:
                              type: number
    post:
      tags:
        - Notification Dashboards (WIP, don't use)
      description: Create new validator subscriptions.
      parameters:
        - $ref: '#/components/parameters/DashboardIdPath'
      requestBody:
        description: |-
          `validators`: Provide an array of validator indicies or public keys that should get subscribed.

          `event_types`: For each type of event set whether you want to be notified when it happens.:

          - `validator_offline`

          - `proposal_missed`

          - `proposal_submitted`

          - `validator_slashed`

          - `sync_committee`

          - `attestation_missed`

          - `withdrawal_processed`

          `group_id`: Provide a single group id, to which all subscriptions get added to. If ommited, the default group will be used.
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                validators:
                  type: array
                  items:
                    type: string
                enabled_event_types:
                  type: object
                  properties:
                    validator_offline:
                      type: boolean
                    proposal_missed:
                      type: boolean
                    proposal_submitted:
                      type: boolean
                    validator_slashed:
                      type: boolean
                    sync_committee:
                      type: boolean
                    attestation_missed:
                      type: boolean
                    withdrawal_processed:
                      type: boolean
                group_id:
                  type: number
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          type: object
                          properties:
                            public_key:
                              type: string
                            events:
                              type: array
                              items:
                                type: string
                            group_id:
                              type: number
        '400':
          description: Bad Request. The request could not be performed by the server due to malformed syntax or invalid parameters.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageResponse'
        '409':
          description: Conflict. The request could not be performed by the server because the authenticated user has already reached their validator notification subscription limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageResponse'
    delete:
      tags:
        - Notification Dashboards (WIP, don't use)
      description: Unsubscribe specific validators from notifications.
      parameters:
        - $ref: '#/components/parameters/DashboardIdPath'
        - name: validators
          in: query
          required: false
          description: |-
            Provide a comma seperated list of validator indices or public keys that should get unsubscribed to. If ommited, all validators will be unsubscribed to.

            **Internal Note:** should have request body for extensive requests like `PUT /api/i/notification-dashboards/{dashboard_id}/validators/events`, but OpenAPI 3.0 standard forbids request body for `DELETE` endpoints.
          schema:
            type: string
      responses:
        '204':
          description: No Content. The request was successful.
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageResponse'
  /api/i/notification-dashboards/{dashboard_id}/groups/{group_id}/validators:
    put:
      tags:
        - Notification Dashboards (WIP, don't use)
      description: Update the group associated with specified validator subscriptions for the authenticated user.
      parameters:
        - $ref: '#/components/parameters/DashboardIdPath'
        - $ref: '#/components/parameters/GroupIdPath'
      requestBody:
        description: |-
          `group_id`: Provide a single group id, to which all specified validators get added to.

          `validators`: (optional) Provide an array of subscribed validator indices or public keys, that should have their notification group changed. For requests with extensive amounts of validators, this field can be used instead of the query parameter to avoid `414` errors. **Note:** If this field is set, the query parameter will be ignored.
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                group_id:
                  type: number
                validators:
                  type: array
                  items:
                    type: string
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request. The request could not be performed by the server due to malformed syntax or invalid parameters.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageResponse'
  /api/i/notification-dashboards/{dashboard_id}/validators/events:
    put:
      tags:
        - Notification Dashboards (WIP, don't use)
      description: Update the event types associated with specified validator subscriptions for the authenticated user.
      parameters:
        - $ref: '#/components/parameters/DashboardIdPath'
        - name: validators
          in: query
          required: false
          description: Comma seperated list of validator indices or public keys that should have their subscribed notification events changed. If ommitted, all subscribed validators will be affected.
          schema:
            type: string
      requestBody:
        description: |-
          `event_types`:  For each type of event set whether you want to be notified when it happens.

          - `validator_offline`

          - `proposal_missed`

          - `proposal_submitted`

          - `validator_slashed`

          - `sync_committee`

          - `attestation_missed`

          - `withdrawal_processed`

          **Internal note:** Maybe we won't document the next one publicly to avoid confusion.

          `validators`: (optional) Provide an array of subscribed validator indices or public keys, that should have their subscribed notification events changed. For requests with extensive amounts of validators, this field can be used instead of the query parameter to avoid `414` errors. **Note:** If the query parameter is set, this field will be ignored. 
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                enabled_event_types:
                  type: object
                  properties:
                    validator_offline:
                      type: boolean
                    proposal_missed:
                      type: boolean
                    proposal_submitted:
                      type: boolean
                    validator_slashed:
                      type: boolean
                    sync_committee:
                      type: boolean
                    attestation_missed:
                      type: boolean
                    withdrawal_processed:
                      type: boolean
                validators:
                  type: array
                  items:
                    type: string
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request. The request could not be performed by the server due to malformed syntax or invalid parameters.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageResponse'
  /api/i/notification-dashboards/{dashboard_id}/clients:
    get:
      tags:
        - Notification Dashboards (WIP, don't use)
      description: Get a list of client notification subscriptions associated with this user.
      parameters:
        - $ref: '#/components/parameters/DashboardIdPath'
        - $ref: '#/components/parameters/CursorParameter'
        - $ref: '#/components/parameters/LimitParameter'
      responses:
        '200':
          description: Created
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/PagingResponse'
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          type: object
                          properties:
                            name:
                              type: string
                            type:
                              type: string
                            version:
                              type: string
                            date:
                              type: string
    put:
      tags:
        - Notification Dashboards (WIP, don't use)
      description: Update the client subscriptions for the authenticated user.
      parameters:
        - $ref: '#/components/parameters/DashboardIdPath'
      requestBody:
        description: '`clients`: Provide an clients of events that should get subscribed to. See https://beaconcha.in/ethClients for possible options. **Note:** All clients that are not provided will be unsubscribed.'
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                clients:
                  type: array
                  items:
                    type: string
      responses:
        '200':
          description: Created
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          type: object
                          properties:
                            public_key:
                              type: string
                            events:
                              type: array
                              items:
                                type: string
                            group_id:
                              type: number
        '400':
          description: Bad Request. The request could not be performed by the server due to malformed syntax or invalid parameters.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageResponse'
  /api/v2/networks/{network}/validators:
    get:
      tags:
        - Validators
      description: Get a list of validators.
      parameters:
        - $ref: '#/components/parameters/Layer1NetworkPath'
        - $ref: '#/components/parameters/ValidatorStatusesParameter'
        - $ref: '#/components/parameters/CursorParameter'
        - $ref: '#/components/parameters/LimitParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/PagingResponse'
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/EthereumValidatorResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageResponse'
  /api/v2/networks/{network}/validators/{validator}:
    get:
      tags:
        - Validators
      description: Get information for a specified validator.
      parameters:
        - $ref: '#/components/parameters/Layer1NetworkPath'
        - $ref: '#/components/parameters/ValidatorParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/EthereumValidatorResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageResponse'
  /api/v2/networks/{network}/validators/{validator}/duties:
    get:
      tags:
        - Validators
      description: Get validator duty information for a specified validator
      parameters:
        - $ref: '#/components/parameters/Layer1NetworkPath'
        - $ref: '#/components/parameters/ValidatorParameter'
        - $ref: '#/components/parameters/DailyParameter'
        - $ref: '#/components/parameters/CursorParameter'
        - $ref: '#/components/parameters/LimitParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/PagingResponse'
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/EthereumValidatorDutiesResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageResponse'
  /api/v2/networks/{network}/addresses/{address}/validators:
    get:
      tags:
        - Validators
      description: Get a list of validators deposited by a specified address.
      parameters:
        - $ref: '#/components/parameters/Layer1NetworkPath'
        - $ref: '#/components/parameters/AddressParameter'
        - $ref: '#/components/parameters/CursorParameter'
        - $ref: '#/components/parameters/LimitParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/PagingResponse'
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/EthereumValidatorResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageResponse'
  /api/v2/networks/{network}/withdrawal-credentials/{credential}/validators:
    get:
      tags:
        - Validators
      description: Get a list of validators associated with a specified withdrawal credential.
      parameters:
        - $ref: '#/components/parameters/Layer1NetworkPath'
        - $ref: '#/components/parameters/WithdrawalCredentialsParameter'
        - $ref: '#/components/parameters/CursorParameter'
        - $ref: '#/components/parameters/LimitParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/PagingResponse'
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/EthereumValidatorResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageResponse'
  /api/v2/networks/{network}/epochs:
    get:
      tags:
        - Epochs
      description: Get a list of the latest epochs.
      parameters:
        - $ref: '#/components/parameters/Layer1NetworkPath'
        - $ref: '#/components/parameters/FinalityParameter'
        - $ref: '#/components/parameters/CursorParameter'
        - $ref: '#/components/parameters/LimitParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/PagingResponse'
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/EthereumEpochResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageResponse'
  /api/v2/networks/{network}/epochs/{epoch}:
    get:
      tags:
        - Epochs
      description: Get information for a specified epoch.
      parameters:
        - $ref: '#/components/parameters/Layer1NetworkPath'
        - $ref: '#/components/parameters/EpochNumbersParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/EthereumEpochResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageResponse'
  /api/v2/networks/{network}/blocks:
    get:
      tags:
        - Blocks and Slots
      description: Get a list of the latest execution layer blocks.
      parameters:
        - $ref: '#/components/parameters/Layer1NetworkPath'
        - $ref: '#/components/parameters/GraffitiParameter'
        - $ref: '#/components/parameters/BlockStatusesParameter'
        - $ref: '#/components/parameters/FinalityParameter'
        - $ref: '#/components/parameters/CursorParameter'
        - $ref: '#/components/parameters/LimitParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/PagingResponse'
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/EthereumBlockResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageResponse'
  /api/v2/networks/{network}/blocks/{block}:
    get:
      tags:
        - Blocks and Slots
      description: Get information for a specified execution layer block
      parameters:
        - $ref: '#/components/parameters/Layer1NetworkPath'
        - $ref: '#/components/parameters/BlockNumbersParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/EthereumBlockResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageResponse'
  /api/v2/networks/{network}/slots:
    get:
      tags:
        - Blocks and Slots
      description: Get a list of the latest consensus layer slots
      parameters:
        - $ref: '#/components/parameters/Layer1NetworkPath'
        - $ref: '#/components/parameters/GraffitiParameter'
        - $ref: '#/components/parameters/BlockStatusesParameter'
        - $ref: '#/components/parameters/FinalityParameter'
        - $ref: '#/components/parameters/CursorParameter'
        - $ref: '#/components/parameters/LimitParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/PagingResponse'
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/EthereumBlockResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageResponse'
  /api/v2/networks/{network}/slots/{slot}:
    get:
      tags:
        - Blocks and Slots
      description: Get information for a specified consensus layer slot.
      parameters:
        - $ref: '#/components/parameters/Layer1NetworkPath'
        - $ref: '#/components/parameters/SlotNumbersParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/EthereumBlockResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageResponse'
  /api/v2/networks/{network}/validators/{validator}/blocks:
    get:
      tags:
        - Blocks and Slots
      description: Get a list of execution layer blocks produced by a specified validator.
      parameters:
        - $ref: '#/components/parameters/Layer1NetworkPath'
        - $ref: '#/components/parameters/ValidatorParameter'
        - $ref: '#/components/parameters/CursorParameter'
        - $ref: '#/components/parameters/LimitParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/PagingResponse'
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/EthereumBlockResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageResponse'
  /api/v2/networks/{network}/addresses/{address}/priority-fee-blocks:
    get:
      tags:
        - Blocks and Slots
      description: Get a list of execution layer blocks with a specified priority fee recipient.
      parameters:
        - $ref: '#/components/parameters/Layer1NetworkPath'
        - $ref: '#/components/parameters/AddressParameter'
        - $ref: '#/components/parameters/CursorParameter'
        - $ref: '#/components/parameters/LimitParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/PagingResponse'
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/EthereumBlockResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageResponse'
  /api/v2/networks/{network}/addresses/{address}/proposer-reward-blocks:
    get:
      tags:
        - Blocks and Slots
      description: Get a list of execution layer blocks with a specified proposer reward recipient.
      parameters:
        - $ref: '#/components/parameters/Layer1NetworkPath'
        - $ref: '#/components/parameters/AddressParameter'
        - $ref: '#/components/parameters/CursorParameter'
        - $ref: '#/components/parameters/LimitParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/PagingResponse'
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/EthereumBlockResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageResponse'
  /api/v2/networks/{network}/forked-blocks:
    get:
      tags:
        - Blocks and Slots
      description: Get a list of the latest forked blocks.
      parameters:
        - $ref: '#/components/parameters/Layer1NetworkPath'
        - $ref: '#/components/parameters/CursorParameter'
        - $ref: '#/components/parameters/LimitParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          allOf:
                            - $ref: '#/components/schemas/EthereumBlockResponse'
                            - type: object
                              properties:
                                attestations:
                                  type: array
                                  items:
                                    $ref: '#/components/schemas/EthereumAggregatedAttestationsResponse'
                            - type: object
                              properties:
                                voluntary-exits:
                                  type: array
                                  items:
                                    $ref: '#/components/schemas/EthereumVoluntaryExitResponse'
                            - type: object
                              properties:
                                deposits:
                                  type: array
                                  items:
                                    $ref: '#/components/schemas/EthereumDeposit'
                            - type: object
                              properties:
                                withdrawals:
                                  type: array
                                  items:
                                    $ref: '#/components/schemas/EthereumWithdrawalResponse'
                            - type: object
                              properties:
                                bls_changes:
                                  type: array
                                  items:
                                    $ref: '#/components/schemas/BLSChangeResponse'
                            - type: object
                              properties:
                                slashings:
                                  type: array
                                  items:
                                    $ref: '#/components/schemas/EthereumSlashingResponse'
                  - $ref: '#/components/schemas/PagingResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageResponse'
  /api/v2/networks/{network}/forked-blocks/{block}:
    get:
      tags:
        - Blocks and Slots
      description: Get a list of forked blocks with a specified block number.
      parameters:
        - $ref: '#/components/parameters/Layer1NetworkPath'
        - $ref: '#/components/parameters/BlockNumbersParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          allOf:
                            - $ref: '#/components/schemas/EthereumBlockResponse'
                            - type: object
                              properties:
                                attestations:
                                  type: array
                                  items:
                                    $ref: '#/components/schemas/EthereumAggregatedAttestationsResponse'
                            - type: object
                              properties:
                                voluntary-exits:
                                  type: array
                                  items:
                                    $ref: '#/components/schemas/EthereumVoluntaryExitResponse'
                            - type: object
                              properties:
                                deposits:
                                  type: array
                                  items:
                                    $ref: '#/components/schemas/EthereumDeposit'
                            - type: object
                              properties:
                                withdrawals:
                                  type: array
                                  items:
                                    $ref: '#/components/schemas/EthereumWithdrawalResponse'
                            - type: object
                              properties:
                                bls_changes:
                                  type: array
                                  items:
                                    $ref: '#/components/schemas/BLSChangeResponse'
                            - type: object
                              properties:
                                slashings:
                                  type: array
                                  items:
                                    $ref: '#/components/schemas/EthereumSlashingResponse'
                  - $ref: '#/components/schemas/PagingResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageResponse'
  /api/v2/networks/{network}/forked-slots/{slot}:
    get:
      tags:
        - Blocks and Slots
      description: Get a list of forked blocks with a specified slot number.
      parameters:
        - $ref: '#/components/parameters/Layer1NetworkPath'
        - $ref: '#/components/parameters/SlotNumbersParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          allOf:
                            - $ref: '#/components/schemas/EthereumBlockResponse'
                            - type: object
                              properties:
                                attestations:
                                  type: array
                                  items:
                                    $ref: '#/components/schemas/EthereumAggregatedAttestationsResponse'
                            - type: object
                              properties:
                                voluntary-exits:
                                  type: array
                                  items:
                                    $ref: '#/components/schemas/EthereumVoluntaryExitResponse'
                            - type: object
                              properties:
                                deposits:
                                  type: array
                                  items:
                                    $ref: '#/components/schemas/EthereumDeposit'
                            - type: object
                              properties:
                                withdrawals:
                                  type: array
                                  items:
                                    $ref: '#/components/schemas/EthereumWithdrawalResponse'
                            - type: object
                              properties:
                                bls_changes:
                                  type: array
                                  items:
                                    $ref: '#/components/schemas/BLSChangeResponse'
                            - type: object
                              properties:
                                slashings:
                                  type: array
                                  items:
                                    $ref: '#/components/schemas/EthereumSlashingResponse'
                  - $ref: '#/components/schemas/PagingResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageResponse'
  /api/v2/networks/{network}/validator-statuses:
    get:
      tags:
        - Validators
      description: Returns a summary of all validator statuses of the latest epoch by default.
      parameters:
        - $ref: '#/components/parameters/Layer1NetworkPath'
        - $ref: '#/components/parameters/FinalityParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/EthereumValidatorStatusesResponse'
  /api/v2/networks/{network}/validator-leaderboard:
    get:
      tags:
        - Validators
      description: Get a list of the current top 100 performing validators
      parameters:
        - $ref: '#/components/parameters/Layer1NetworkPath'
        - $ref: '#/components/parameters/TimeframeParameter'
        - $ref: '#/components/parameters/CursorParameter'
        - $ref: '#/components/parameters/LimitParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/PagingResponse'
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/EthereumLeaderboardResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageResponse'
  /api/v2/networks/{network}/validators/{validator}/attestations:
    get:
      tags:
        - Attestations
      description: Get a list of attestations from a specified validator.
      parameters:
        - $ref: '#/components/parameters/Layer1NetworkPath'
        - $ref: '#/components/parameters/ValidatorParameter'
        - $ref: '#/components/parameters/CursorParameter'
        - $ref: '#/components/parameters/LimitParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/PagingResponse'
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/EthereumAttestationResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageResponse'
  /api/v2/networks/{network}/epochs/{epoch}/attestations:
    get:
      tags:
        - Attestations
      description: Get a list of attestations in a specified epoch.
      parameters:
        - $ref: '#/components/parameters/Layer1NetworkPath'
        - $ref: '#/components/parameters/EpochNumbersParameter'
        - $ref: '#/components/parameters/CursorParameter'
        - $ref: '#/components/parameters/LimitParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/PagingResponse'
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/EthereumAttestationResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageResponse'
  /api/v2/networks/{network}/slots/{slot}/attestations:
    get:
      tags:
        - Attestations
      description: Get a list of attestations in a specified slot.
      parameters:
        - $ref: '#/components/parameters/Layer1NetworkPath'
        - $ref: '#/components/parameters/SlotNumbersParameter'
        - $ref: '#/components/parameters/CursorParameter'
        - $ref: '#/components/parameters/LimitParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/PagingResponse'
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/EthereumAttestationResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageResponse'
  /api/v2/networks/{network}/blocks/{block}/attestations:
    get:
      tags:
        - Attestations
      description: Returns information for attestations in a specified block.
      parameters:
        - $ref: '#/components/parameters/Layer1NetworkPath'
        - $ref: '#/components/parameters/BlockNumbersParameter'
        - $ref: '#/components/parameters/CursorParameter'
        - $ref: '#/components/parameters/LimitParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/PagingResponse'
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/EthereumAttestationResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageResponse'
  /api/v2/networks/{network}/aggregated-attestations:
    get:
      tags:
        - Attestations
      description: Returns aggregated attestations for specified query parameters.
      parameters:
        - $ref: '#/components/parameters/Layer1NetworkPath'
        - $ref: '#/components/parameters/CursorParameter'
        - $ref: '#/components/parameters/LimitParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/PagingResponse'
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/EthereumAggregatedAttestationsResponse'
  /api/v2/networks/{network}/block-sizes:
    get:
      tags:
        - Blocks and Slots
      description: Returns the average daily blocksize (bytes) for the specified period.
      parameters:
        - $ref: '#/components/parameters/Layer1NetworkPath'
        - $ref: '#/components/parameters/StartDateParameter'
        - $ref: '#/components/parameters/EndDateParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/EthereumBlockSizeResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageResponse'
  /api/v2/networks/{network}/ethstore/{day}:
    get:
      tags:
        - Validator Rewards
      description: Returns ETH.STORE for specific beaconchain day.
      parameters:
        - $ref: '#/components/parameters/Layer1NetworkPath'
        - name: day
          in: path
          required: true
          description: Return ETH.STORE for a beaconchain day. Day 1 = Epoch 0 - 225 on Ethereum. 'latest' for latest day
          schema:
            type: integer
            default: latest
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/EthereumEthstoreResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageResponse'
  /api/v2/networks/{network}/validators/{validator}/reward-history:
    get:
      tags:
        - Validator Rewards
      description: Get validator reward information for a specified validator.
      parameters:
        - $ref: '#/components/parameters/Layer1NetworkPath'
        - $ref: '#/components/parameters/ValidatorParameter'
        - $ref: '#/components/parameters/DailyParameter'
        - $ref: '#/components/parameters/CursorParameter'
        - $ref: '#/components/parameters/LimitParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/PagingResponse'
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/EthereumValidatorRewardResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageResponse'
  /api/v2/networks/{network}/validators/{validator}/balance-history:
    get:
      tags:
        - Validator Rewards
      description: Get validator balance information for a specified validator.
      parameters:
        - $ref: '#/components/parameters/Layer1NetworkPath'
        - $ref: '#/components/parameters/ValidatorParameter'
        - $ref: '#/components/parameters/DailyParameter'
        - $ref: '#/components/parameters/CursorParameter'
        - $ref: '#/components/parameters/LimitParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/PagingResponse'
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/EthereumValidatorBalanceResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageResponse'
  /api/v2/networks/{network}/validators/{validator}/performances:
    get:
      tags:
        - Validator Rewards
      description: Returns a list of performance summary reports by a specified validator.
      parameters:
        - $ref: '#/components/parameters/Layer1NetworkPath'
        - $ref: '#/components/parameters/ValidatorParameter'
        - $ref: '#/components/parameters/CursorParameter'
        - $ref: '#/components/parameters/LimitParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/PagingResponse'
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/PerformanceResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageResponse'
  /api/v2/networks/{network}/slashings:
    get:
      tags:
        - Slashings
      description: Get a list of the latest slashings.
      parameters:
        - $ref: '#/components/parameters/Layer1NetworkPath'
        - $ref: '#/components/parameters/SlashingFilterParameter'
        - $ref: '#/components/parameters/CursorParameter'
        - $ref: '#/components/parameters/LimitParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/PagingResponse'
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/EthereumSlashingResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageResponse'
  /api/v2/networks/{network}/validators/{validator}/slashings:
    get:
      tags:
        - Slashings
      description: Get a list of the slashings by a specified validator.
      parameters:
        - $ref: '#/components/parameters/Layer1NetworkPath'
        - $ref: '#/components/parameters/ValidatorParameter'
        - $ref: '#/components/parameters/CursorParameter'
        - $ref: '#/components/parameters/LimitParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/PagingResponse'
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/EthereumSlashingResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageResponse'
  /api/v2/networks/{network}/deposits:
    get:
      tags:
        - Deposits
      description: Get a list of the latest deposits.
      parameters:
        - $ref: '#/components/parameters/Layer1NetworkPath'
        - $ref: '#/components/parameters/ValidParameter'
        - $ref: '#/components/parameters/ProcessedParameter'
        - $ref: '#/components/parameters/CursorParameter'
        - $ref: '#/components/parameters/LimitParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/PagingResponse'
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/EthereumDepositResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageResponse'
  /api/v2/networks/{network}/validators/{validator}/deposits:
    get:
      tags:
        - Deposits
      description: Get a list of the deposits associated with a specified validator.
      parameters:
        - $ref: '#/components/parameters/Layer1NetworkPath'
        - $ref: '#/components/parameters/ValidatorParameter'
        - $ref: '#/components/parameters/ValidParameter'
        - $ref: '#/components/parameters/ProcessedParameter'
        - $ref: '#/components/parameters/CursorParameter'
        - $ref: '#/components/parameters/LimitParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/PagingResponse'
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/EthereumDepositResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageResponse'
  /api/v2/networks/{network}/transactions/{hash}/deposits:
    get:
      tags:
        - Deposits
      description: Get a list of the deposits triggered by a specified transaction.
      parameters:
        - $ref: '#/components/parameters/Layer1NetworkPath'
        - $ref: '#/components/parameters/TransactionHashesParameter'
        - $ref: '#/components/parameters/ValidParameter'
        - $ref: '#/components/parameters/ProcessedParameter'
        - $ref: '#/components/parameters/CursorParameter'
        - $ref: '#/components/parameters/LimitParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/PagingResponse'
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/EthereumDepositResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageResponse'
  /api/v2/networks/{network}/withdrawals:
    get:
      tags:
        - Withdrawals
      description: Get a list of the latest withdrawals.
      parameters:
        - $ref: '#/components/parameters/Layer1NetworkPath'
        - $ref: '#/components/parameters/CursorParameter'
        - $ref: '#/components/parameters/LimitParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/PagingResponse'
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/EthereumWithdrawalResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageResponse'
  /api/v2/networks/{network}/slots/{slot}/withdrawals:
    get:
      tags:
        - Withdrawals
      description: Get a list of the withdrawals in a specified slot.
      parameters:
        - $ref: '#/components/parameters/Layer1NetworkPath'
        - $ref: '#/components/parameters/SlotNumbersParameter'
        - $ref: '#/components/parameters/CursorParameter'
        - $ref: '#/components/parameters/LimitParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/PagingResponse'
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/EthereumWithdrawalResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageResponse'
  /api/v2/networks/{network}/blocks/{block}/withdrawals:
    get:
      tags:
        - Withdrawals
      description: Get a list of the withdrawals in a specified block.
      parameters:
        - $ref: '#/components/parameters/Layer1NetworkPath'
        - $ref: '#/components/parameters/BlockNumbersParameter'
        - $ref: '#/components/parameters/CursorParameter'
        - $ref: '#/components/parameters/LimitParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/PagingResponse'
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/EthereumWithdrawalResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageResponse'
  /api/v2/networks/{network}/validators/{validator}/withdrawals:
    get:
      tags:
        - Withdrawals
      description: Get a list of the withdrawals by a specified validator.
      parameters:
        - $ref: '#/components/parameters/Layer1NetworkPath'
        - $ref: '#/components/parameters/ValidatorParameter'
        - $ref: '#/components/parameters/CursorParameter'
        - $ref: '#/components/parameters/LimitParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/PagingResponse'
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/EthereumWithdrawalResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageResponse'
  /api/v2/networks/{network}/withdrawal-credentials/{credential}/withdrawals:
    get:
      tags:
        - Withdrawals
      description: Get a list of the withdrawals by a specified credential.
      parameters:
        - $ref: '#/components/parameters/Layer1NetworkPath'
        - $ref: '#/components/parameters/WithdrawalCredentialsParameter'
        - $ref: '#/components/parameters/CursorParameter'
        - $ref: '#/components/parameters/LimitParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/PagingResponse'
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/EthereumWithdrawalResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageResponse'
  /api/v2/networks/{network}/voluntary-exits:
    get:
      tags:
        - Voluntary Exits
      description: Get a list of the latest voluntary exits.
      parameters:
        - $ref: '#/components/parameters/Layer1NetworkPath'
        - $ref: '#/components/parameters/CursorParameter'
        - $ref: '#/components/parameters/LimitParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/PagingResponse'
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/EthereumVoluntaryExitResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageResponse'
  /api/v2/networks/{network}/epochs/{epoch}/voluntary-exits:
    get:
      tags:
        - Voluntary Exits
      description: Get a list of voluntary exits in a specified epoch.
      parameters:
        - $ref: '#/components/parameters/Layer1NetworkPath'
        - $ref: '#/components/parameters/EpochNumbersParameter'
        - $ref: '#/components/parameters/CursorParameter'
        - $ref: '#/components/parameters/LimitParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/PagingResponse'
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/EthereumVoluntaryExitResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageResponse'
  /api/v2/networks/{network}/slots/{slot}/voluntary-exits:
    get:
      tags:
        - Voluntary Exits
      description: Get a list of voluntary exits in a specified slot.
      parameters:
        - $ref: '#/components/parameters/Layer1NetworkPath'
        - $ref: '#/components/parameters/SlotNumbersParameter'
        - $ref: '#/components/parameters/CursorParameter'
        - $ref: '#/components/parameters/LimitParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/PagingResponse'
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/EthereumVoluntaryExitResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageResponse'
  /api/v2/networks/{network}/blocks/{block}/voluntary-exits:
    get:
      tags:
        - Voluntary Exits
      description: Get a list of voluntary exits in a specified block.
      parameters:
        - $ref: '#/components/parameters/Layer1NetworkPath'
        - $ref: '#/components/parameters/BlockNumbersParameter'
        - $ref: '#/components/parameters/CursorParameter'
        - $ref: '#/components/parameters/LimitParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/PagingResponse'
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/EthereumVoluntaryExitResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageResponse'
  /api/v2/networks/{network}/addresses/{address}/balance-history:
    get:
      tags:
        - Addresses
      description: Get a list of balances for a specified address
      parameters:
        - $ref: '#/components/parameters/Layer1NetworkPath'
        - $ref: '#/components/parameters/AddressParameter'
        - $ref: '#/components/parameters/StartDateParameter'
        - $ref: '#/components/parameters/EndDateParameter'
        - $ref: '#/components/parameters/StartBlockParameter'
        - $ref: '#/components/parameters/EndBlockParameter'
        - $ref: '#/components/parameters/TokenAddressParameter'
        - $ref: '#/components/parameters/CursorParameter'
        - $ref: '#/components/parameters/LimitParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/PagingResponse'
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/EthereumAccountBalanceResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageResponse'
  /api/v2/networks/{network}/addresses/{address}/token-supply-history:
    get:
      tags:
        - Addresses
      description: Get the token supply history for a specified contract.
      parameters:
        - $ref: '#/components/parameters/Layer1NetworkPath'
        - $ref: '#/components/parameters/AddressParameter'
        - $ref: '#/components/parameters/StartDateParameter'
        - $ref: '#/components/parameters/EndDateParameter'
        - $ref: '#/components/parameters/StartBlockParameter'
        - $ref: '#/components/parameters/EndBlockParameter'
        - $ref: '#/components/parameters/CursorParameter'
        - $ref: '#/components/parameters/LimitParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/PagingResponse'
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/EthereumTokenSupplyHistoryResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageResponse'
  /api/v2/networks/{network}/addresses/{address}/event-logs:
    get:
      tags:
        - Addresses
      description: Returns the event logs from an address. Filterable by block range. See https://docs.etherscan.io/api-endpoints/logs#get-event-logs-by-address
      parameters:
        - $ref: '#/components/parameters/Layer1NetworkPath'
        - name: address
          in: path
          required: true
          description: Address for which to return event logs or ENS name ('name.eth')
          schema:
            type: string
        - $ref: '#/components/parameters/CursorParameter'
        - $ref: '#/components/parameters/LimitParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/PagingResponse'
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/EthereumEventLogResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageResponse'
  /api/v2/networks/{network}/transactions:
    get:
      tags:
        - Transactions
      description: Get a list of the latest transactions
      parameters:
        - $ref: '#/components/parameters/Layer1NetworkPath'
        - $ref: '#/components/parameters/TransactionHashesParameterRequired'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/EthereumTransactionResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageResponse'
  /api/v2/networks/{network}/transactions/{hash}:
    get:
      tags:
        - Transactions
      description: Get a list of transactions in a specified block.
      parameters:
        - $ref: '#/components/parameters/Layer1NetworkPath'
        - $ref: '#/components/parameters/TransactionHashesParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/EthereumTransactionResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageResponse'
  /api/v2/networks/{network}/addresses/{address}/transactions:
    get:
      tags:
        - Transactions
      description: Get a list of transactions associated with an address.
      parameters:
        - $ref: '#/components/parameters/Layer1NetworkPath'
        - $ref: '#/components/parameters/AddressParameter'
        - $ref: '#/components/parameters/HideSpamParameter'
        - $ref: '#/components/parameters/MethodParameter'
        - $ref: '#/components/parameters/TransactionDirectionParameter'
        - $ref: '#/components/parameters/TransactionTypeParameter'
        - $ref: '#/components/parameters/StartDateParameter'
        - $ref: '#/components/parameters/EndDateParameter'
        - $ref: '#/components/parameters/StartBlockParameter'
        - $ref: '#/components/parameters/EndBlockParameter'
        - $ref: '#/components/parameters/CursorParameter'
        - $ref: '#/components/parameters/LimitParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/PagingResponse'
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/EthereumTransactionResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageResponse'
  /api/v2/networks/{network}/slots/{slot}/transactions:
    get:
      tags:
        - Transactions
      description: Get a list of transactions in a specified slot.
      parameters:
        - $ref: '#/components/parameters/Layer1NetworkPath'
        - $ref: '#/components/parameters/SlotNumbersParameter'
        - $ref: '#/components/parameters/HideSpamParameter'
        - $ref: '#/components/parameters/MethodParameter'
        - $ref: '#/components/parameters/TransactionTypeParameter'
        - $ref: '#/components/parameters/CursorParameter'
        - $ref: '#/components/parameters/LimitParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/PagingResponse'
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/EthereumTransactionResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageResponse'
  /api/v2/networks/{network}/blocks/{block}/transactions:
    get:
      tags:
        - Transactions
      description: Get a list of transactions in a specified block.
      parameters:
        - $ref: '#/components/parameters/Layer1NetworkPath'
        - $ref: '#/components/parameters/BlockNumbersParameter'
        - $ref: '#/components/parameters/HideSpamParameter'
        - $ref: '#/components/parameters/MethodParameter'
        - $ref: '#/components/parameters/TransactionTypeParameter'
        - $ref: '#/components/parameters/CursorParameter'
        - $ref: '#/components/parameters/LimitParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/PagingResponse'
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/EthereumTransactionResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageResponse'
  /api/v2/networks/{network}/blocks/{block}/blobs:
    get:
      tags:
        - Transactions
      description: Get a list of blobs for a specified execution layer block
      parameters:
        - $ref: '#/components/parameters/Layer1NetworkPath'
        - $ref: '#/components/parameters/BlockNumbersParameter'
        - $ref: '#/components/parameters/CursorParameter'
        - $ref: '#/components/parameters/LimitParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/PagingResponse'
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          type: object
                          properties:
                            index:
                              type: number
                            transaction_hash:
                              type: string
                            kzg_commitment:
                              type: string
                            kzg_proof:
                              type: string
                            blob_versioned_hash:
                              type: string
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageResponse'
  /api/v2/networks/{network}/bls-changes:
    get:
      tags:
        - BLS Changes
      description: Get a list of the latest BLS-to-execution.
      parameters:
        - $ref: '#/components/parameters/Layer1NetworkPath'
        - $ref: '#/components/parameters/CursorParameter'
        - $ref: '#/components/parameters/LimitParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/PagingResponse'
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/BLSChangeResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageResponse'
  /api/v2/networks/{network}/epochs/{epoch}/bls-changes:
    get:
      tags:
        - BLS Changes
      description: Get a list of BLS-to-execution in a specified epoch.
      parameters:
        - $ref: '#/components/parameters/Layer1NetworkPath'
        - $ref: '#/components/parameters/EpochNumbersParameter'
        - $ref: '#/components/parameters/CursorParameter'
        - $ref: '#/components/parameters/LimitParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/PagingResponse'
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/BLSChangeResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageResponse'
  /api/v2/networks/{network}/slots/{slot}/bls-changes:
    get:
      tags:
        - BLS Changes
      description: Get a list of BLS-to-execution in a specified slot.
      parameters:
        - $ref: '#/components/parameters/Layer1NetworkPath'
        - $ref: '#/components/parameters/SlotNumbersParameter'
        - $ref: '#/components/parameters/CursorParameter'
        - $ref: '#/components/parameters/LimitParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/PagingResponse'
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/BLSChangeResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageResponse'
  /api/v2/networks/{network}/blocks/{block}/bls-changes:
    get:
      tags:
        - BLS Changes
      description: Get a list of BLS-to-execution in a specified block.
      parameters:
        - $ref: '#/components/parameters/Layer1NetworkPath'
        - $ref: '#/components/parameters/BlockNumbersParameter'
        - $ref: '#/components/parameters/CursorParameter'
        - $ref: '#/components/parameters/LimitParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/PagingResponse'
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/BLSChangeResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageResponse'
  /api/v2/networks/{network}/validators/{validator}/bls-changes:
    get:
      tags:
        - BLS Changes
      description: Get a list of BLS-to-execution by a specified validator.
      parameters:
        - $ref: '#/components/parameters/Layer1NetworkPath'
        - $ref: '#/components/parameters/ValidatorParameter'
        - $ref: '#/components/parameters/CursorParameter'
        - $ref: '#/components/parameters/LimitParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/PagingResponse'
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/BLSChangeResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageResponse'
  /api/v2/networks/{network}/validator-queue:
    get:
      tags:
        - Validators
      description: Returns the current number of validators entering and exiting the beacon chain.
      parameters:
        - $ref: '#/components/parameters/Layer1NetworkPath'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/QueueResponse'
  /api/v2/networks/ethereum/addresses/{address}/ens:
    get:
      tags:
        - ENS
      description: Returns ENS related information about an Ethereum address.
      parameters:
        - name: address
          in: path
          required: true
          description: Provide an Ethereum address to retrieve information related to ENS.
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/ensResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageResponse'
  /api/v2/networks/ethereum/ens/{ens_name}:
    get:
      tags:
        - ENS
      description: Returns ENS related information about an ENS name.
      parameters:
        - name: ens_name
          in: path
          required: true
          description: Provide an ENS name to retrieve information related to its Ethereum address.
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/ensResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageResponse'
  /api/v2/networks/{layer_2_network}/batches:
    get:
      tags:
        - Layer 2
      description: Returns an array of state batches.
      parameters:
        - $ref: '#/components/parameters/Layer2NetworkPath'
        - name: startBatch
          in: query
          description: Only returns batches after this batch number
          schema:
            type: integer
        - name: endBatch
          in: query
          description: Only return batches before this batch number
          schema:
            type: integer
        - name: day
          in: query
          description: Only return batches from this day
          schema:
            type: string
        - $ref: '#/components/parameters/CursorParameter'
        - $ref: '#/components/parameters/LimitParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/PagingResponse'
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/OptimismBatchResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageResponse'
  /api/v2/networks/{layer_2_network}/blocks:
    get:
      tags:
        - Layer 2
      description: Get a list of the latest execution layer blocks.
      parameters:
        - $ref: '#/components/parameters/Layer2NetworkPath'
        - $ref: '#/components/parameters/GraffitiParameter'
        - $ref: '#/components/parameters/BlockStatusesParameter'
        - $ref: '#/components/parameters/FinalityParameter'
        - $ref: '#/components/parameters/CursorParameter'
        - $ref: '#/components/parameters/LimitParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/PagingResponse'
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/OptimismBlockResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageResponse'
  /api/v2/networks/{layer_2_network}/blocks/{block}:
    get:
      tags:
        - Layer 2
      description: Get information for a specified block
      parameters:
        - $ref: '#/components/parameters/Layer2NetworkPath'
        - $ref: '#/components/parameters/BlockNumbersParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/OptimismBlockResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageResponse'
  /api/v2/networks/{layer_2_network}/block-sizes:
    get:
      tags:
        - Layer 2
      description: Get list of daily blocksize (bytes) for the specified period.
      parameters:
        - $ref: '#/components/parameters/Layer2NetworkPath'
        - $ref: '#/components/parameters/StartDateParameter'
        - $ref: '#/components/parameters/EndDateParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/OptimismBlockSizeResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageResponse'
  /api/v2/networks/{layer_2_network}/addresses/{address}/event-logs:
    get:
      tags:
        - Layer 2
      description: See https://docs.etherscan.io/api-endpoints/logs#get-event-logs-by-address
      parameters:
        - $ref: '#/components/parameters/Layer2NetworkPath'
        - name: address
          in: path
          required: true
          description: Address for which to return event logs
          schema:
            type: string
        - $ref: '#/components/parameters/CursorParameter'
        - $ref: '#/components/parameters/LimitParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/PagingResponse'
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/OptimismEventLogResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageResponse'
  /api/v2/networks/{layer_2_network}/addresses/{address}/transactions:
    get:
      tags:
        - Layer 2
      description: ''
      parameters:
        - $ref: '#/components/parameters/Layer2NetworkPath'
        - $ref: '#/components/parameters/AddressParameter'
        - $ref: '#/components/parameters/TokenParameter'
        - $ref: '#/components/parameters/MethodParameter'
        - $ref: '#/components/parameters/TransactionDirectionParameter'
        - $ref: '#/components/parameters/TransactionTypeParameter'
        - $ref: '#/components/parameters/StartDateParameter'
        - $ref: '#/components/parameters/EndDateParameter'
        - $ref: '#/components/parameters/StartBlockParameter'
        - $ref: '#/components/parameters/EndBlockParameter'
        - $ref: '#/components/parameters/CursorParameter'
        - $ref: '#/components/parameters/LimitParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/PagingResponse'
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/OptimismTransactionResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageResponse'
  /api/v2/networks/{layer_2_network}/addresses/{address}/layer2-to-layer1-transactions:
    get:
      tags:
        - Layer 2
      description: 'Transaction from Optimism to Ethereum. Note:''startBlock'' refers to an Optimism block. '
      parameters:
        - $ref: '#/components/parameters/Layer2NetworkPath'
        - $ref: '#/components/parameters/AddressParameter'
        - $ref: '#/components/parameters/StartDateParameter'
        - $ref: '#/components/parameters/EndDateParameter'
        - $ref: '#/components/parameters/StartBlockParameter'
        - $ref: '#/components/parameters/EndBlockParameter'
        - $ref: '#/components/parameters/CursorParameter'
        - $ref: '#/components/parameters/LimitParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/PagingResponse'
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/OptimismTransactionResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageResponse'
  /api/v2/networks/{layer_2_network}/addresses/{address}/layer1-to-layer2-transactions:
    get:
      tags:
        - Layer 2
      description: 'Transaction from Ethereum to Optimism. Note:''startBlock'' refers to an Optimism block. '
      parameters:
        - $ref: '#/components/parameters/Layer2NetworkPath'
        - $ref: '#/components/parameters/AddressParameter'
        - $ref: '#/components/parameters/StartDateParameter'
        - $ref: '#/components/parameters/EndDateParameter'
        - $ref: '#/components/parameters/StartBlockParameter'
        - $ref: '#/components/parameters/EndBlockParameter'
        - $ref: '#/components/parameters/CursorParameter'
        - $ref: '#/components/parameters/LimitParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/PagingResponse'
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/OptimismBridgeResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageResponse'
  /api/v2/networks/{layer_2_network}/addresses/{address}/token-supply-history:
    get:
      tags:
        - Layer 2
      description: ''
      parameters:
        - $ref: '#/components/parameters/Layer2NetworkPath'
        - $ref: '#/components/parameters/AddressParameter'
        - $ref: '#/components/parameters/StartDateParameter'
        - $ref: '#/components/parameters/EndDateParameter'
        - $ref: '#/components/parameters/StartBlockParameter'
        - $ref: '#/components/parameters/EndBlockParameter'
        - name: tokenType
          in: query
          description: Specify the token type (ERC20, ERC721, ERC1155)
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/CursorParameter'
        - $ref: '#/components/parameters/LimitParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/PagingResponse'
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/OptimismTokenSupplyHistoryResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageResponse'
  /api/v2/networks/{layer_2_network}/addresses/{address}/balances:
    get:
      tags:
        - Layer 2
      description: ''
      parameters:
        - $ref: '#/components/parameters/Layer2NetworkPath'
        - $ref: '#/components/parameters/AddressParameter'
        - $ref: '#/components/parameters/StartDateParameter'
        - $ref: '#/components/parameters/EndDateParameter'
        - $ref: '#/components/parameters/StartBlockParameter'
        - $ref: '#/components/parameters/EndBlockParameter'
        - $ref: '#/components/parameters/TokenAddressParameter'
        - $ref: '#/components/parameters/CursorParameter'
        - $ref: '#/components/parameters/LimitParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/PagingResponse'
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/OptimismAccountBalanceResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageResponse'
  /api/v2/networks/{layer_2_network}/transactions/{hash}:
    get:
      tags:
        - Layer 2
      description: ''
      parameters:
        - $ref: '#/components/parameters/Layer2NetworkPath'
        - $ref: '#/components/parameters/TransactionHashesParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/OptimismTransactionResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageResponse'
  /api/v2/networks/{network}/broadcasts:
    post:
      tags:
        - General
      description: Broadcast various signatures or transactions
      parameters:
        - $ref: '#/components/parameters/Layer1NetworkPath'
      requestBody:
        description: Raw signed signature
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SignatureRequestBody'
      responses:
        '201':
          description: Created
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageResponse'
  /api/v2/networks/{network}/smart-contracts:
    get:
      tags:
        - Ethereum Smart Contracts
      description: Returns smart contracts based on the search criteria
      parameters:
        - $ref: '#/components/parameters/EthereumNetworkPath'
        - name: contract creator
          in: query
          description: The address of the contract creator
          schema:
            type: string
        - name: transaction hash
          in: query
          description: The transaction hash of the contract creation
          schema:
            type: string
        - $ref: '#/components/parameters/CursorParameter'
        - $ref: '#/components/parameters/LimitParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/PagingResponse'
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/SmartContractResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageResponse'
  /api/v2/networks/{network}/smart-contracts/{address}:
    get:
      tags:
        - Ethereum Smart Contracts
      description: Returns basic infofrmation about the contract
      parameters:
        - $ref: '#/components/parameters/EthereumNetworkPath'
        - name: address
          in: path
          required: true
          description: 'The contract address '
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/SourceCodeResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageResponse'
  /api/v2/networks/{network}/smart-contracts/{address}/source-code:
    get:
      tags:
        - Ethereum Smart Contracts
      description: Get Contract ABI for Verified Contract Source Code - https://docs.etherscan.io/api-endpoints/contracts#verify-source-code
      parameters:
        - $ref: '#/components/parameters/EthereumNetworkPath'
        - name: address
          in: path
          required: true
          description: The contract address to get the ABI, but only for verified source codes.
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/SourceCodeResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageResponse'
  /api/v2/networks/{network}/smart-contracts/{address}/abi:
    get:
      tags:
        - Ethereum Smart Contracts
      description: Get Contract ABI for Verified Contract Source Code - https://docs.etherscan.io/api-endpoints/contracts#verify-source-code
      parameters:
        - $ref: '#/components/parameters/EthereumNetworkPath'
        - name: address
          in: path
          required: true
          description: The contract address to get the ABI, but only for verified source codes.
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/ABIResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageResponse'
  /api/v2/networks/{network}/source-code-verifications:
    post:
      tags:
        - Ethereum Smart Contracts
      description: submit for verification https://docs.etherscan.io/api-endpoints/contracts#verify-source-code
      parameters:
        - $ref: '#/components/parameters/EthereumNetworkPath'
      requestBody:
        description: TODO
        required: true
        content:
          application/json: {}
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/SmartContractVerifyResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageResponse'
  /api/v2/networks/{network}/source-code-verifications/{id}:
    get:
      tags:
        - Ethereum Smart Contracts
      description: Check verification status https://docs.etherscan.io/api-endpoints/contracts#verify-source-code
      parameters:
        - $ref: '#/components/parameters/EthereumNetworkPath'
        - name: id
          in: path
          required: true
          description: The status ID returned from the submission request.
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/SmartContractVerifyErrorMessageResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageResponse'
  /api/v2/networks/{network}/smart-contracts/import-solidity:
    post:
      tags:
        - Ethereum Smart Contracts
      description: This endpoint either solidity source files or the solidity source code itsel, parses it for function & event signatures and imports them. https://www.4byte.directory/docs/
      parameters:
        - $ref: '#/components/parameters/EthereumNetworkPath'
      requestBody:
        description: Import the source code of the smart contract.
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                source-file:
                  type: string
                  format: binary
          application/json:
            schema:
              type: object
              properties:
                source_code:
                  type: string
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/SmartContractImportResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageResponse'
  /api/v2/networks/{network}/smart-contracts/event-signatures:
    post:
      tags:
        - Ethereum Smart Contracts
      description: Hhuman readable function signature and the 4-byte function selector used by the EVM. Leave queries empty for a paginates list of signatures. https://www.4byte.directory/docs/
      parameters:
        - $ref: '#/components/parameters/EthereumNetworkPath'
      requestBody:
        description: Event signature
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SignatureRequestBody'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/SmartContractSignatureResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageResponse'
    get:
      tags:
        - Ethereum Smart Contracts
      description: Returns a paginated list of event signatures. https://www.4byte.directory/docs/
      parameters:
        - $ref: '#/components/parameters/EthereumNetworkPath'
        - $ref: '#/components/parameters/CursorParameter'
        - $ref: '#/components/parameters/LimitParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/PagingResponse'
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/SmartContractSignatureResponse'
  /api/v2/networks/{network}/smart-contracts/event-signatures/{id}:
    get:
      tags:
        - Ethereum Smart Contracts
      description: retrieve an individual event signature. https://www.4byte.directory/docs/
      parameters:
        - $ref: '#/components/parameters/EthereumNetworkPath'
        - name: id
          in: path
          required: true
          description: The primary key of the signature.
          schema:
            type: integer
            default: ''
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/SmartContractSignatureResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageResponse'
  /api/v2/networks/{network}/smart-contracts/signatures:
    post:
      tags:
        - Ethereum Smart Contracts
      description: Hhuman readable function signature and the 4-byte function selector used by the EVM. Leave queries empty for a paginates list of signatures. https://www.4byte.directory/docs/
      parameters:
        - $ref: '#/components/parameters/EthereumNetworkPath'
      requestBody:
        description: Signature
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SignatureRequestBody'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/SmartContractSignatureResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageResponse'
    get:
      tags:
        - Ethereum Smart Contracts
      description: Returns a paginated list of signatures. https://www.4byte.directory/docs/
      parameters:
        - $ref: '#/components/parameters/EthereumNetworkPath'
        - $ref: '#/components/parameters/CursorParameter'
        - $ref: '#/components/parameters/LimitParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/PagingResponse'
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/SmartContractSignatureResponse'
  /api/v2/networks/{network}/smart-contracts/signatures/{id}:
    get:
      tags:
        - Ethereum Smart Contracts
      description: Hhuman readable function signature and the 4-byte function selector used by the EVM. Leave queries empty for a paginates list of signatures. https://www.4byte.directory/docs/
      parameters:
        - $ref: '#/components/parameters/EthereumNetworkPath'
        - name: id
          in: path
          required: true
          description: The primary key of the signature.
          schema:
            type: integer
            default: ''
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/SmartContractSignatureResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageResponse'
  /api/v2/networks/{network}/gasnow:
    get:
      description: Predicts the gas price based on pending transactions in the mempool
      tags:
        - Ethereum Gas
      parameters:
        - $ref: '#/components/parameters/EthereumNetworkPath'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/EthereumGasNowResponse'
  /api/v2/networks/{network}/average-gas-limit-history:
    get:
      description: Get the daily average gas limit.
      tags:
        - Ethereum Gas
      parameters:
        - $ref: '#/components/parameters/EthereumNetworkPath'
        - $ref: '#/components/parameters/StartDateParameter'
        - $ref: '#/components/parameters/EndDateParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/EthereumDailyAvgGasLimitResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageResponse'
  /api/v2/networks/{network}/gas-used-history:
    get:
      description: Get the daily used gas.
      tags:
        - Ethereum Gas
      parameters:
        - $ref: '#/components/parameters/EthereumNetworkPath'
        - $ref: '#/components/parameters/StartDateParameter'
        - $ref: '#/components/parameters/EndDateParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/EthereumDailyGasUsedResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageResponse'
  /api/v2/rocket-pool/nodes:
    get:
      tags:
        - Rocket Pool
      description: 'Returns a list of Rocket Pool nodes. See: https://rocketscan.io/api/mainnet/nodes/list'
      parameters:
        - $ref: '#/components/parameters/CursorParameter'
        - $ref: '#/components/parameters/LimitParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/PagingResponse'
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/EthereumRocketpoolNodeResponse'
  /api/v2/rocket-pool/minipools:
    get:
      tags:
        - Rocket Pool
      description: 'Returns a list of Rocket Pool nodes. See: https://rocketscan.io/api/mainnet/nodes/list'
      parameters:
        - $ref: '#/components/parameters/ValidatorIndicesParameter'
        - $ref: '#/components/parameters/ValidatorPublicKeysParameter'
        - $ref: '#/components/parameters/CursorParameter'
        - $ref: '#/components/parameters/LimitParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/PagingResponse'
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/EthereumRocketpoolMinipoolResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageResponse'
  /api/v2/networks/{network}/sync_committee/{period}:
    get:
      tags:
        - Sync Committees
      description: Returns the sync-committee for a sync-period. Validators are sorted by sync-committee-index. Sync committees where introduced in the Altair hardfork. Peroids before the hardfork do not contain sync-committees. For mainnet sync-committes first started after epoch 74240 (period 290) and each sync-committee is active for 256 epochs.
      parameters:
        - $ref: '#/components/parameters/Layer1NetworkPath'
        - name: period
          in: path
          required: true
          description: Period, or 'latest' for latest period or 'next' for next period in the future.
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/SyncCommitteeResponse'
  /api/v1/graffitiwall:
    get:
      tags:
        - Graffitiwall
      description: Returns the most recent pixels that have been painted during the last 10000 slots. Optionally set the slot query parameter to look back further. Boundary coordinates are included. Returns an error if an invalid area is provided by the coordinates.
      summary: Get all pixels that have been painted until now on the graffitiwall
      parameters:
        - name: startX
          in: query
          description: Start X offset
          required: false
          schema:
            type: integer
            default: 0
        - name: startY
          in: query
          description: Start Y offset
          required: false
          schema:
            type: integer
            default: 0
        - name: endX
          in: query
          description: End X limit
          required: false
          schema:
            type: integer
            default: 999
        - name: endY
          in: query
          description: End Y limit
          required: false
          schema:
            type: integer
            default: 999
        - name: slot
          in: query
          description: 'Optional: Slot to query'
          required: false
          schema:
            type: integer
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/GraffitiWallResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageResponse'
  /api/v2/eth-price-history:
    get:
      description: Returns the historical price of Ether.
      tags:
        - General
      summary: Daily closing price of one Ether.
      parameters:
        - $ref: '#/components/parameters/StartDateParameter'
        - $ref: '#/components/parameters/EndDateParameter'
        - $ref: '#/components/parameters/CursorParameter'
        - $ref: '#/components/parameters/LimitParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/PagingResponse'
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/EthereumEthDailyPriceResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageResponse'
  /api/v2/multisig-safes/{address}:
    get:
      tags:
        - Multi Sig (SAFE)
      description: See https://safe-transaction-mainnet.safe.global/api/v1/safes/0xc7599b60f05639f93D26e58d56D90C526A6e7575/
      parameters:
        - name: address
          in: path
          description: TODO
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/MultisigInfoResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageResponse'
  /api/v2/multisig-safes/{address}/transactions:
    get:
      tags:
        - Multi Sig (SAFE)
      description: See https://safe-transaction-mainnet.safe.global/ and https://safe-transaction-mainnet.safe.global/api/v1/multisig-transactions/0x5562cc0823c37290b75cf8e5a57e5f7e27342d0c0d20045a06329308a746c825/
      parameters:
        - $ref: '#/components/parameters/AddressParameter'
        - $ref: '#/components/parameters/CursorParameter'
        - $ref: '#/components/parameters/LimitParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/PagingResponse'
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/MultisigTransactionResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageResponse'
  /api/v2/multisig-transactions/{hash}/confirmations:
    get:
      tags:
        - Multi Sig (SAFE)
      description: See https://safe-transaction-mainnet.safe.global/api/v1/multisig-transactions/0x5562cc0823c37290b75cf8e5a57e5f7e27342d0c0d20045a06329308a746c825/confirmations/
      parameters:
        - $ref: '#/components/parameters/TransactionHashesParameter'
        - $ref: '#/components/parameters/CursorParameter'
        - $ref: '#/components/parameters/LimitParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/PagingResponse'
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/MultisigConfirmationResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageResponse'
  /api/v1/client/metrics:
    post:
      tags:
        - User
      summary: Used in eth2 clients to submit stats to your beaconcha.in account. This data can be accessed by the app or the user stats api call.
      parameters:
        - name: apikey
          in: query
          description: User API key, can be found on https://beaconcha.in/user/settings
          required: true
          schema:
            type: string
        - name: machine
          in: query
          description: Name your device if you have multiple devices you want to monitor
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageResponse'
  /api/v1/mobile/notify/register:
    post:
      tags:
        - User
      summary: Register or update your mobile notification token
      requestBody:
        description: Your device`s firebase notification token
        content:
          '*/*':
            schema:
              type: string
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageResponse'
  /api/v1/user/dashboard/save:
    post:
      tags:
        - User
      summary: subscribes a user to get notifications from a specific validator via index
      requestBody:
        description: Index of validator you want to subscribe to
        content:
          '*/*':
            schema:
              type: array
              items:
                type: string
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageResponse'
  /api/v1/user/mobile/settings:
    get:
      tags:
        - User
      summary: Get your device settings, currently only whether to enable mobile notifcations or not
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/MobileSettingsDataResponse'
                  types.ApiResponse:
                    $ref: '#/components/schemas/ErrorMessageResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageResponse'
    post:
      tags:
        - User
      summary: Changing your devices mobile settings
      requestBody:
        description: Whether to enable mobile notifications for this device or not
        content:
          '*/*':
            schema:
              type: boolean
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/MobileSettingsDataResponse'
                  types.ApiResponse:
                    $ref: '#/components/schemas/ErrorMessageResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageResponse'
  /api/v1/user/notifications:
    post:
      tags:
        - User
      summary: Get a set of events a user is subscribed to
      requestBody:
        description: An object that filters through the active subscriptions
        content:
          '*/*':
            schema:
              type: object
              properties:
                event_filters:
                  type: array
                  items:
                    type: string
                event_names:
                  type: array
                  items:
                    type: string
                join_validator:
                  type: boolean
                limit:
                  type: integer
                offset:
                  type: integer
                search:
                  type: string
        required: false
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/SubscriptionResponse'
                  types.ApiResponse:
                    $ref: '#/components/schemas/ErrorMessageResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageResponse'
  /api/v1/user/stats/{offset}/{limit}:
    get:
      tags:
        - User
      summary: Get your client submitted stats
      parameters:
        - name: offset
          in: path
          description: Data offset, default 0
          required: true
          schema:
            type: integer
            default: 0
        - name: limit
          in: path
          description: Data limit, default 180 (~3h).
          required: true
          schema:
            type: integer
            default: 180
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/StatsDataResponse'
                  types.ApiResponse:
                    $ref: '#/components/schemas/ErrorMessageResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageResponse'
  /api/v1/user/token:
    post:
      tags:
        - User
      summary: Exchange your oauth code for an public ID or refresh your public ID
      requestBody:
        content:
          multipart/form-data:
            schema:
              required:
                - grant_type
              properties:
                grant_type:
                  type: string
                  description: grant_type use authorization_code for oauth code or refresh_token if you wish to refresh an token
                code:
                  type: string
                  description: Only required when using authorization_code grant type. Code received via oauth redirect_uri
                redirect_uri:
                  type: string
                  description: Only required when using authorization_code grant type. Must match the redirect_uri from your oauth flow.
                refresh_token:
                  type: string
                  description: Only required when using refresh_token grant type. The refresh_token you received during authorization_code flow.
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OAuthResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OAuthErrorResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OAuthErrorResponse'
  /api/v1/user/validator/saved:
    get:
      tags:
        - User
      summary: Get all your tagged validators
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        index:
                          type: integer
                        pubKey:
                          type: string
                  types.ApiResponse:
                    $ref: '#/components/schemas/ErrorMessageResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageResponse'
  /api/v1/user/validator/{pubkey}/add:
    post:
      tags:
        - User
      summary: subscribes a user to get notifications from a specific validator
      parameters:
        - name: pubkey
          in: path
          description: Public Key of validator you want to subscribe to
          required: true
          schema:
            type: string
      requestBody:
        description: Submit \
        content:
          '*/*':
            schema:
              type: string
        required: false
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageResponse'
  /api/v1/user/validator/{pubkey}/remove:
    post:
      tags:
        - User
      summary: unsubscribes a user from a specific validator
      parameters:
        - name: pubkey
          in: path
          description: Public Key of validator you want to subscribe to
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageResponse'
components:
  parameters:
    CursorParameter:
      name: cursor
      in: query
      description: Return data for the given cursor value. Pass the `paging.next_cursor` value of the previous response to navigate to forward, or pass the `paging.prev_cursor` value of the previous response to navigate to backward.
      schema:
        type: string
    LimitParameter:
      name: limit
      in: query
      description: The maximum number of resources that may be returned.
      schema:
        type: integer
        default: '10'
    DashboardIdPath:
      in: path
      name: dashboard_id
      description: The ID of the dashboard.
      required: true
      schema:
        type: string
    Layer1NetworkPath:
      name: network
      in: path
      description: |-
        The name of the Layer 1 Network. Possible options are:

        - `ethereum`

        - `gnosis` 

         Please note that different networks may return different response schemas. See the response documentation.
      required: true
      schema:
        type: string
    Layer2NetworkPath:
      name: layer_2_network
      in: path
      description: |-
        The name of the Layer 2 Network. Possible options are:

        - `arbitrum`

        - `base`

        - `optimism`

         Please note that different networks may return different response schemas. See the response documentation.
      required: true
      schema:
        type: string
    EthereumNetworkPath:
      name: network
      in: path
      description: |-
        The name of the network. Currently the only possible option is:

        - `ethereum`
      required: true
      schema:
        type: string
    GroupIdPath:
      name: group_id
      in: path
      required: true
      description: The ID of the group.
      schema:
        type: number
    GroupIdQuery:
      name: group_id
      in: query
      required: false
      description: Filter results by group ID.
      schema:
        type: number
    DashboardTokenPath:
      name: public_dashboard_id
      in: path
      required: true
      description: The public ID string.
      schema:
        type: string
    DashboardBlockParameter:
      name: blocks
      in: query
      description: Return only data related with blocks.
      schema:
        type: boolean
    DashboardAttestationParameter:
      name: Attestation
      in: query
      description: Return only data related with Attestations.
      schema:
        type: boolean
    DashboardSyncCommitteeParameter:
      name: syncCommitteee
      in: query
      description: Return only data related with Sync Committee.
      schema:
        type: boolean
    DashboardMissedDutiesParameter:
      name: missedDuties
      in: query
      description: Return only missed duties. Only works if other duties are set to FALSE.
      schema:
        type: boolean
    BlockNumbersParameter:
      name: block
      in: path
      required: true
      description: The block number or the string latest
      schema:
        type: string
    SlotNumbersParameter:
      name: slot
      in: path
      required: true
      description: The slot number or the string latest
      schema:
        type: string
    BlockHashesParameter:
      name: blockHashes
      in: query
      description: Return only data related with these block hashes. (comma separated)
      schema:
        type: string
    SlotHashesParameter:
      name: slotHashes
      in: query
      description: Return only data related with these slot hashes. (comma separated)
      schema:
        type: string
    ValidatorPublicKeysParameter:
      name: validatorPublicKeys
      in: query
      description: Return only data related with these validator public keys. (comma separated)
      schema:
        type: string
    ValidatorIndicesParameter:
      name: validatorIndices
      in: query
      description: Return only data related with these validator indices. (comma separated)
      schema:
        type: string
    ValidatorParameter:
      name: validator
      in: path
      required: true
      description: The validator index or public key to return data for.
      schema:
        type: string
    AddressParameter:
      name: address
      in: path
      required: true
      description: The ethereum address to return data for.
      schema:
        type: string
    PriorityFeeRecipientsParameter:
      name: priorityFeeRecipients
      in: query
      description: Return only data with these priority fee recpients. (comma separated)
      schema:
        type: string
    ProposerRewardRecipientsParameter:
      name: proposerRewardRecipients
      in: query
      description: Return only data with these proposer reward recipients. (comma separated)
      schema:
        type: string
    BlockStatusesParameter:
      name: blockStatuses
      in: query
      description: Can be `canonical` and/or `ommer` (uncle) (comma separated)
      schema:
        type: string
        default: canonical
    FinalityParameter:
      name: finality
      in: query
      description: Return only data with at least this finality status.
      schema:
        type: string
        enum:
          - justified
          - finalized
    GraffitiParameter:
      name: graffiti
      in: query
      description: Return only data in relation with a specific graffiti.
      schema:
        type: string
    ValidatorStatusesParameter:
      name: statuses
      in: query
      description: |-
        Return only data with these statuses (comma separated) 

         TODO: Show list of all statuses we have.
      schema:
        type: string
    PoolLabelParameter:
      name: pool_label
      required: true
      in: path
      description: |-
        Return only data in relation with this staking service. 

         Available services: https://beaconcha.in/pools
      schema:
        type: string
    EpochNumbersParameter:
      name: epoch
      required: true
      in: path
      description: Return data from this epoch number.
      schema:
        type: string
    DepositAddressesParameter:
      name: depositAddresses
      in: query
      description: Return only data related with these deposit addresses. (comma separated)
      schema:
        type: string
    WithdrawalCredentialsParameter:
      name: credential
      in: path
      required: true
      description: Return only data related with this withdrawal credential.
      schema:
        type: string
    WithdrawalAddressesParameter:
      name: withdrawalAddresses
      in: query
      description: Return only data related with these withdrawal addresses. (comma separated)
      schema:
        type: string
    AddressesParameter:
      name: addresses
      in: query
      description: '''0x..''. Add mulitple addresses (comma seperated) or ENS name (''name.eth'')'
      schema:
        type: string
      required: true
    TokenParameter:
      name: token
      in: query
      description: Only return transactions related with this token contract address
      schema:
        type: string
    MethodParameter:
      name: method
      in: query
      description: Only return transactions with this method name or method hash.
      schema:
        type: string
    OrderParameter:
      name: order
      in: query
      description: The sorting preference of the output. 'asc' for ascending and 'desc' for descending.
      schema:
        type: string
        enum:
          - asc
          - desc
        default: asc
    SortParameter:
      name: sort
      in: query
      description: |-
        A comma separated list of fields to sort by and the order. Example: `field1:asc,field2:desc`
      schema:
        type: number
    NetworkParameter:
      name: network
      in: query
      description: If set, results will be filtered to only include networks given. Provide a comma seperated list
      schema:
        type: string
    SearchParameter:
      name: search
      in: query
      description: If set, results will be filtered include the given search term
      schema:
        type: string
    SlashingFilterParameter:
      name: filter
      in: query
      description: If set, returns only data related to specific slashing violations. 'attester' for attestation violation, 'proposer' for proposer violations.
      schema:
        type: string
        nullable: true
        enum:
          - attester
          - proposer
          - null
        default: null
    TransactionHashesParameter:
      name: hash
      in: path
      required: true
      description: Return data related with this transaction hash.
      schema:
        type: string
    TransactionHashesParameterRequired:
      name: transactionHashes
      in: query
      required: true
      description: Returns information about transactions by its hash. (comma sperated)
      schema:
        type: string
    StartDateParameter:
      name: startDate
      in: query
      description: The start date of the time period in 'yyyy-MM-dd' format.
      schema:
        type: string
    EndDateParameter:
      name: endDate
      in: query
      description: The end date of the time period in 'yyyy-MM-dd' format.
      schema:
        type: string
    HideSpamParameter:
      name: hideSpam
      in: query
      description: Token transactions that are marked as such on the UI ('Hidden Symbol') will not be returned per default. 'True' = will not return spam
      schema:
        type: boolean
    StartBlockParameter:
      name: startBlock
      in: query
      description: The first block included in the time period.
      schema:
        type: string
        default: latest
    EndBlockParameter:
      name: endBlock
      in: query
      description: The last block included in the time period.
      schema:
        type: string
    DatesParameter:
      name: dates
      in: query
      description: Return only data from these dates. (comma separated)
      schema:
        type: string
        example: YYYY-MM-DD
    TokenAddressParameter:
      name: tokenAddress
      in: query
      description: Token contract address. Use 'ETH' or 'GNO' for the native currency. Use 'all' for all coins.
      schema:
        type: string
    TransactionDirectionParameter:
      name: transactionDirection
      in: query
      description: Only return ingoing, outgoing transactions.
      schema:
        type: string
        example: '''in'', ''out'''
    TransactionTypeParameter:
      name: transactionType
      in: query
      description: Only return transactions with these transaction types
      schema:
        type: string
      example: erc20,erc721,erc1155,internal,produced_block,withdrawal
    TimeframeParameter:
      name: timeframe
      in: query
      description: ''
      schema:
        type: string
        enum:
          - last_24hours
          - 7d
          - 31d
          - 365d
        default: 7d
    ValidParameter:
      name: valid
      in: query
      description: Only return valid OR invalid deposits. Returns both if unset.
      schema:
        type: boolean
    ProcessedParameter:
      name: processed
      in: query
      description: Only return pending OR processed (inlcuded by the beacon chain) deposits. Returns both if unset.
      schema:
        type: boolean
    DashboardGroupParameter:
      name: groupIds
      in: query
      description: Return only the groups with these group ids. (comma separated). All groups are returned by default.
      schema:
        type: integer
    DailyParameter:
      name: daily
      in: query
      description: Summarize the data on a daily basis
      schema:
        type: boolean
        default: false
  schemas:
    Dashboard:
      type: object
      properties:
        id:
          type: number
          description: The unique identifier for the dashboard.
        name:
          type: string
          description: The name of the dashboard.
    ClElNum:
      type: object
      properties:
        total:
          type: number
        consensus_layer:
          type: number
        execution_layer:
          type: number
    EthereumEpochResponse:
      type: object
      properties:
        epoch:
          type: integer
        start_slot:
          type: integer
        start_slot_date_time:
          type: string
          format: date-time
        finality:
          type: string
          enum:
            - not_finalized
            - justified
            - finalized
        total_validator_count:
          type: integer
        total_validator_balances:
          type: integer
        average_validator_balance:
          type: integer
        validator_activated_count:
          type: integer
        validator_voluntary_exits_count:
          type: integer
        validator_offline_count:
          type: integer
        voting_particiaption:
          type: object
          properties:
            active_effective_balances:
              type: integer
            participated_effective_balances:
              type: integer
            participation_rate:
              type: integer
        processed_deposits_count:
          type: integer
        processed_deposits_amount:
          type: integer
        processed_withdrawals_count:
          type: integer
        processed_withdrawals_amount:
          type: integer
        proposer_slashings_count:
          type: integer
        attester_slashings_count:
          type: integer
        attestations_count:
          type: integer
        sync_committee_participation_rate:
          type: integer
    OptimismBatchResponse:
      type: object
      properties:
        batch_index:
          type: integer
        batch_size:
          type: integer
        batch_type:
          type: string
        batch_root:
          type: string
        previous_total_elements:
          type: integer
        extra_data:
          type: integer
        state_batches:
          type: array
          items:
            type: object
            properties:
              id:
                type: integer
              transaction_batches:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                    blocks:
                      type: array
                      items:
                        type: object
                        properties:
                          id:
                            type: integer
                          transactions:
                            type: array
                            items:
                              type: object
                              properties:
                                id:
                                  type: integer
        batch:
          type: object
          properties:
            state_batch:
              type: object
              properties:
                state_batch_index:
                  type: integer
                block_confirmations_on_ethereum:
                  type: integer
                state_root_submission_transaction_hash:
                  type: string
                  format: hex
                transaction_batch:
                  type: array
                  items:
                    type: object
                    properties:
                      transaction_batch_index:
                        type: integer
                      eth_transaction_batch_submission_transaction_hash:
                        type: string
                        format: hex
                      state_batch_index:
                        type: integer
                      eth_state_batch_submission_transaction_hash:
                        type: string
                        format: hex
                      block_confirmations_on_ethereum:
                        type: integer
    ValidatorLuckResponse:
      type: object
      properties:
        proposals:
          type: number
        sync_committee:
          type: number
    DashboardSummaryResponse:
      type: object
      properties:
        groups:
          type: array
          items:
            type: object
            properties:
              id:
                type: number
              name:
                type: string
              24h:
                type: object
                properties:
                  luck:
                    $ref: '#/components/schemas/ValidatorLuckResponse'
                  duties:
                    $ref: '#/components/schemas/EthereumValidatorDuties'
                  rewards:
                    $ref: '#/components/schemas/EthereumValidatorReward'
                  total_efficiency:
                    type: number
                  apr:
                    $ref: '#/components/schemas/ClElNum'
              7d:
                type: object
              31d:
                type: object
              total:
                type: object
    ensResponse:
      type: object
      properties:
        registration_date_time:
          type: string
          format: date-time
        expiration_date_time:
          type: string
          format: date-time
        manager:
          type: string
        owner:
          type: string
        token_id:
          type: number
        avatar:
          type: string
        content_hash:
          type: string
        sub_domains:
          type: array
          items:
            type: string
        history:
          type: object
          properties:
            from:
              type: string
            transaction_hash:
              type: string
            date_time:
              type: string
              format: date-time
            action:
              type: string
    SmartContractResponse:
      type: object
      properties:
        relay_name:
          type: string
        builder_public_key:
          type: string
        proposer_reward:
          type: string
        proposer_reward_recipient:
          type: string
    SourceCodeResponse:
      type: object
      properties:
        source_code:
          type: string
        abi:
          type: string
        contract_name:
          type: string
        compiler_version:
          type: string
        optimization_used:
          type: integer
        runs:
          type: integer
        constructor_arguments:
          type: string
        evm_version:
          type: string
        library:
          type: string
        license_type:
          type: string
        proxy:
          type: integer
        implementation:
          type: integer
        swarm_source:
          type: integer
    ABIResponse:
      type: string
      example: '[{"constant":true,"inputs":[{"name":"","type":"uint256"}]'
    SmartContractSignatureResponse:
      type: object
      properties:
        id:
          type: integer
        createdTime:
          type: string
        text_signature:
          type: string
        bytes_signature:
          type: string
        hex_signature:
          type: string
          format: hex
    SmartContractImportResponse:
      type: object
      properties:
        processed:
          type: integer
        imported:
          type: integer
        duplicates:
          type: integer
        ignored:
          type: integer
    GraffitiWallResponse:
      type: object
      properties:
        color:
          type: integer
        slot:
          type: integer
        validator:
          type: integer
        x:
          type: integer
        'y':
          type: integer
    EthereumLeaderboardResponse:
      type: object
      properties:
        validator_index:
          type: integer
        performance:
          type: object
          properties:
            last_24hours:
              type: integer
            7d:
              type: integer
            31d:
              type: integer
            365d:
              type: integer
            total:
              type: integer
        rank:
          type: object
          properties:
            last_24hours:
              type: integer
            7d:
              type: integer
            31d:
              type: integer
            365d:
              type: integer
            total:
              type: integer
    EthereumBlockResponse:
      type: object
      properties:
        consensus_algorithm:
          type: string
        status:
          type: string
        finality:
          type: string
          enum:
            - not_finalized
            - justified
            - finalized
        consensus_layer:
          type: object
          properties:
            slot:
              type: integer
            slot_date_time:
              type: string
              format: date-time
            epoch:
              type: integer
            block_root:
              type: string
            proposer:
              type: integer
            attestations_count:
              type: integer
            attester_slashings_count:
              type: integer
            proposer_slashings_count:
              type: integer
            deposits:
              type: object
              properties:
                eth1data_block_hash:
                  type: string
                eth1data_deposit_root:
                  type: string
                eth1data_deposit_count:
                  type: integer
                processed_beacon_deposits_count:
                  type: integer
                processed_beacon_deposits_amount:
                  type: integer
            graffiti:
              type: string
            graffiti_text:
              type: string
            parent_root:
              type: string
            randao_reveal:
              type: string
            signature:
              type: string
            state_root:
              type: string
            sync_committee:
              type: object
              properties:
                sync_aggregate_bits:
                  type: string
                sync_aggregate_participation:
                  type: number
                sync_aggregate_signature:
                  type: string
            voluntary_exits_count:
              type: integer
            processed_withdrawals_count:
              type: integer
            processed_withdrawals_amount:
              type: integer
            votes:
              type: integer
        execution_layer:
          type: object
          properties:
            block_number:
              type: integer
            block_hash:
              type: string
            block_date_time:
              type: string
              format: date-time
            miner_reward:
              type: integer
            miner_reward_recipient:
              type: string
            proposer_reward:
              type: integer
            proposer_reward_recipient:
              type: string
            priority_fees:
              type: integer
            priority_fees_recipient:
              type: string
            gas_limit:
              type: integer
            gas_used:
              type: integer
            base_fee:
              type: integer
            base_fee_per_gas:
              type: integer
            total_gas_burn:
              type: integer
            extra_data:
              type: string
            logs_bloom:
              type: string
            parent_hash:
              type: string
            prev_randao:
              type: string
            receipts_root:
              type: string
            state_root:
              type: string
            transactions_count:
              type: integer
            internal_transactions_count:
              type: integer
            blob_transactions_count:
              type: integer
            uncle_count:
              type: integer
            uncle_hash:
              type: string
            difficulty:
              type: integer
            deposits:
              type: object
              properties:
                executed_contract_deposits_count:
                  type: integer
                executed_contract_deposits_amount:
                  type: integer
            relays_reported_data:
              type: array
              items:
                type: object
                properties:
                  relay_name:
                    type: string
                  builder_public_key:
                    type: string
                  proposer_reward:
                    type: string
                  proposer_reward_recipient:
                    type: string
    OptimismBlockResponse:
      type: object
      properties:
        block_hash:
          type: string
        parent_hash:
          type: string
        block_number:
          type: integer
        extra_data:
          type: string
        fee_recipient:
          type: string
        gas_limit:
          type: integer
        gas_used:
          type: integer
        logs_bloom:
          type: string
        random:
          type: string
        receipts_root:
          type: string
        state_root:
          type: string
        date_time:
          type: string
          format: date-time
        transactions_count:
          type: integer
    ErrorMessageResponse:
      type: object
      properties:
        error:
          type: string
    PagingResponse:
      type: object
      properties:
        paging:
          type: object
          properties:
            next_cursor:
              type: string
            prev_cursor:
              type: string
    EthereumValidatorResponse:
      type: object
      properties:
        validator_index:
          type: integer
        validator_public_key:
          type: string
        status:
          type: string
        balance:
          type: integer
        effective_balance:
          type: integer
        slashed:
          type: boolean
        latest_attestation_slot:
          type: integer
        latest_attestation_slot_date_time:
          type: string
          format: date-time
        processed_beacon_deposits_count:
          type: integer
        processed_beacon_deposits_amount:
          type: integer
        slashed_other_validators_count:
          type: integer
        fully_withdrawable_epoch:
          type: integer
        withdrawal_credentials:
          type: string
        rank_number:
          type: integer
        rank_percent:
          type: integer
        activation:
          type: object
          properties:
            activation_epoch:
              type: integer
            activation_epoch_start_date_time:
              type: string
              format: date-time
            activation_eligibility_epoch:
              type: integer
            activation_eligibility_epoch_start_date_time:
              type: string
              format: date-time
            activation_queue_position:
              type: integer
            expected_activation_epoch:
              type: integer
            expected_activation_epoch_start_date_time:
              type: string
              format: date-time
        exit:
          type: object
          properties:
            exit_epoch:
              type: integer
            exit_epoch_start_date_time:
              type: string
              format: date-time
            exit_queue_position:
              type: integer
        withdrawals:
          type: object
          properties:
            processed_withdrawals_count:
              type: integer
            processed_withdrawals_amount:
              type: integer
            scheduled_withdrawal:
              type: object
              properties:
                estimated_withdrawal_slot:
                  type: integer
                estimated_withdrawal_slot_date_time:
                  type: string
                  format: date-time
                estimated_withdrawal_amount:
                  type: integer
        duties:
          $ref: '#/components/schemas/EthereumValidatorDuties'
        rewards:
          $ref: '#/components/schemas/EthereumValidatorReward'
        luck:
          $ref: '#/components/schemas/ValidatorLuckResponse'
        labels:
          $ref: '#/components/schemas/ValidatorLabels'
    EthereumDepositResponse:
      allOf:
        - $ref: '#/components/schemas/EthereumDeposit'
        - type: object
          properties:
            labels:
              $ref: '#/components/schemas/ValidatorLabels'
    AdConfigurationResponse:
      type: object
      properties:
        key:
          type: string
        jquery_selector:
          type: string
        insert_mode:
          type: string
        refresh_interval:
          type: number
        for_all_users:
          type: boolean
        banner_id:
          type: number
        html_content:
          type: string
        enabled:
          type: boolean
    EthereumDeposit:
      type: object
      properties:
        block_number:
          type: integer
        block_date_time:
          type: string
          format: date-time
        public_key:
          type: string
        amount:
          type: integer
        signature:
          type: string
        transaction_hash:
          type: string
        transaction_index:
          type: integer
        transaction_input:
          type: string
        from_address:
          type: string
        merkle_tree_index:
          type: string
        valid_signature:
          type: boolean
        withdrawal_credentials:
          type: string
        removed:
          type: boolean
        finality:
          type: string
          enum:
            - not_finalized
            - justified
            - finalized
    EthereumWithdrawalResponse:
      type: object
      properties:
        validator_index:
          type: integer
        slot:
          type: integer
        slot_date_time:
          type: string
          format: date-time
        epoch:
          type: integer
        address:
          type: string
        amount:
          type: integer
        block_root:
          type: string
        withdrawal_index:
          type: integer
        finality:
          type: string
          enum:
            - not_finalized
            - justified
            - finalized
        labels:
          $ref: '#/components/schemas/ValidatorLabels'
    EthereumVoluntaryExitResponse:
      type: object
      properties:
        block_index:
          type: integer
        block_root:
          type: string
        block_slot:
          type: integer
        epoch:
          type: integer
        signature:
          type: string
        validator_index:
          type: integer
        finality:
          type: string
          enum:
            - not_finalized
            - justified
            - finalized
        labels:
          $ref: '#/components/schemas/ValidatorLabels'
    MultisigTransactionResponse:
      type: object
      properties:
        TODO:
          type: object
    MultisigConfirmationResponse:
      type: object
      properties:
        TODO:
          type: object
    MultisigInfoResponse:
      type: object
      properties:
        TODO:
          type: object
    EthereumAttestationResponse:
      type: object
      properties:
        validator_index:
          type: string
        attester_slot:
          type: string
        attester_slot_date_time:
          type: string
          format: date-time
        epoch:
          type: integer
        inclusion_slot:
          type: string
        inclusion_slot_date_time:
          type: string
          format: date-time
        status:
          type: integer
        committee_index:
          type: integer
        finality:
          type: string
          enum:
            - not_finalized
            - justified
            - finalized
        labels:
          $ref: '#/components/schemas/ValidatorLabels'
    EthereumAggregatedAttestationsResponse:
      type: object
      properties:
        aggregation_bits:
          type: string
        beacon_block_root:
          type: string
        block_index:
          type: integer
        block_root:
          type: string
        block_slot:
          type: integer
        committee_index:
          type: integer
        signature:
          type: string
        slot:
          type: integer
        source_epoch:
          type: integer
        source_root:
          type: string
        target_epoch:
          type: integer
        target_root:
          type: string
        validators:
          type: array
          items:
            type: integer
        finality:
          type: string
          enum:
            - not_finalized
            - justified
            - finalized
    EthereumSlashingResponse:
      type: object
      properties:
        attester_slashing:
          type: object
          properties:
            attestation1_beacon_block_root:
              type: string
            attestation1_index:
              type: integer
            attestation1_indices:
              type: array
              items:
                type: integer
            attestation1_signature:
              type: string
            attestation1_slot:
              type: integer
            attestation1_source_epoch:
              type: integer
            attestation1_source_root:
              type: string
            attestation1_target_epoch:
              type: integer
            attestation1_target_root:
              type: string
            attestation2_beacon_block_root:
              type: string
            attestation2_index:
              type: integer
            attestation2_indices:
              type: array
              items:
                type: integer
            attestation2_signature:
              type: string
            attestation2_slot:
              type: integer
            attestation2_source_epoch:
              type: integer
            attestation2_source_root:
              type: string
            attestation2_target_epoch:
              type: integer
            attestation2_target_root:
              type: string
            block_index:
              type: integer
            block_root:
              type: string
            block_slot:
              type: integer
        proposer_slashing:
          type: object
          properties:
            block_index:
              type: integer
            block_root:
              type: string
            block_slot:
              type: integer
            header1_bodyroot:
              type: string
            header1_parentroot:
              type: string
            header1_signature:
              type: string
            header1_slot:
              type: integer
            header1_stateroot:
              type: string
            header2_bodyroot:
              type: string
            header2_parentroot:
              type: string
            header2_signature:
              type: string
            header2_slot:
              type: integer
            header2_stateroot:
              type: string
            proposer_index:
              type: integer
        finality:
          type: string
          enum:
            - not_finalized
            - justified
            - finalized
        labels:
          $ref: '#/components/schemas/ValidatorLabels'
    EthereumRocketpoolMinipoolResponse:
      type: object
      properties:
        index:
          type: integer
        minipool:
          type: object
          properties:
            minipool_address:
              type: string
            minipool_deposit_type:
              type: string
            minipool_node_fee:
              type: integer
            minipool_status:
              type: string
            minipool_status_time:
              type: integer
        node:
          type: object
          properties:
            node_address:
              type: string
            node_max_rpl_stake:
              type: integer
            node_min_rpl_stake:
              type: integer
            node_rpl_stake:
              type: integer
            node_timezone_location:
              type: string
            penalty_count:
              type: integer
            rewards:
              type: object
              properties:
                unclaimed_rpl_rewards:
                  type: integer
                unclaimed_smoothing_pool:
                  type: integer
                rpl_cumulative_rewards:
                  type: integer
                claimed_smoothing_pool:
                  type: integer
                rpl_apr:
                  type: integer
    EthereumRocketpoolNodeResponse:
      type: object
      properties:
        index:
          type: integer
        node:
          type: object
          properties:
            node_address:
              type: string
            time_zone:
              type: string
            smoothing_pool:
              type: boolean
            withdrawal_credential:
              type: string
            pending_withdrawal_credential:
              type: string
            minipool_count:
              type: integer
            minipool_active_cfixount:
              type: integer
        rpl:
          type: object
          properties:
            min_collateral:
              type: string
            max_collateral:
              type: integer
            effective_collateral:
              type: integer
            current_collateral:
              type: integer
            collateral_perc:
              type: integer
            effective_collateral_perc:
              type: integer
            claimed_rpl:
              type: number
            unclaimed_rpl:
              type: number
        eth:
          type: object
          properties:
            total_deposit:
              type: integer
            matched_by_protocol:
              type: integer
            collaterization_ratio:
              type: number
            max_matchable_eth:
              type: integer
            deposit_credit:
              type: number
            refund_balance:
              type: number
            distributer_balance:
              type: number
        smoothing_pool:
          type: object
          properties:
            claimed:
              type: number
            unclaimed:
              type: number
        minipool_public_keys:
          type: array
          items:
            type: string
        created:
          type: object
          properties:
            date_time:
              type: string
              format: date-time
            block_number:
              type: integer
    EthereumEventLogResponse:
      type: object
      properties:
        address:
          type: string
        topics:
          type: array
          items:
            type: string
        data:
          type: string
        block_number:
          type: string
        date_time:
          type: string
          format: date-time
        gas_price:
          type: string
        gas_used:
          type: string
        log_index:
          type: string
        transaction_hash:
          type: string
        transaction_index:
          type: string
    OptimismEventLogResponse:
      type: object
      properties:
        address:
          type: string
        topics:
          type: array
          items:
            type: string
        data:
          type: string
        block_number:
          type: string
        date_time:
          type: string
          format: date-time
        gas_price:
          type: string
        gas_used:
          type: string
        log_index:
          type: string
        transaction_Hash:
          type: string
        transaction_index:
          type: string
    EthereumTransactionResponse:
      type: object
      properties:
        block_number:
          type: string
        chain_id:
          type: integer
        position_in_block:
          type: string
        nonce:
          type: string
        date_time:
          type: string
          format: date-time
        type:
          type: string
          enum:
            - Standard
            - Withdrawal
            - Produced Block
            - ERC-20
            - ERC-721
            - ERC-1155
            - internal-tx
        from:
          type: string
        block_confirmations:
          type: integer
        to:
          type: string
        transaction_direction:
          type: string
        method_id:
          type: string
        method_name:
          type: string
        hash:
          type: object
          properties:
            hash:
              type: string
            transaction_hash:
              type: string
            block_hash:
              type: string
        value:
          type: string
        contract_address:
          type: string
        input:
          type: string
        fees:
          type: object
          properties:
            base_fee:
              type: number
            priority_fee:
              type: number
              description: Pre-merge block gas prices equal to priority fees since there was no base_fee.
            cumulative_gas_used:
              type: string
        is_error:
          type: string
        err_code:
          type: string
        note:
          type: string
    OptimismBridgeResponse:
      type: object
      properties:
        optimism_to_ethereum:
          type: object
          properties:
            message_nonce:
              type: integer
            from_address:
              type: string
              format: hex
            to_address:
              type: string
              format: hex
            optimism_transaction_hash:
              type: string
            date_time:
              type: string
              format: date-time
            time_left:
              type: integer
            ethereum_transaction_hash:
              type: string
              format: hex
            status:
              type: string
              enum:
                - N/A
                - Relayed
                - Ready for Relay
            withdrawal_data:
              type: object
              description: Deposit receipt introduced with bedrock
              properties:
                nonce:
                  type: integer
                target:
                  type: string
                  format: hex
                  description: Target address on L1.
                deposit_nonce:
                  type: integer
                is_system_transaction:
                  type: boolean
        ethereum_to_optimism:
          type: object
          properties:
            ethereum_block_number:
              type: integer
            queue_index:
              type: integer
            from_address:
              type: string
              format: hex
            to_address:
              type: string
              format: hex
            optimism_transaction_hash:
              type: string
              format: hex
            guaranteed_gas:
              type: integer
              format: WEI
              description: Used after bedrock. (Purchasing guarantees)
            date_time:
              type: string
              format: date-time
            time_left:
              type: integer
            ethereum_transaction_hash:
              type: string
              format: hex
            origin_transaction_hash:
              type: string
              format: hex
            status:
              type: string
              enum:
                - deposited
                - confirmed
            deposit_receipt:
              type: object
              description: Deposit receipt introduced with bedrock
              properties:
                bloom:
                  type: string
                logs:
                  type: string
                deposit_nonce:
                  type: integer
                is_system_transaction:
                  type: boolean
    OptimismTransactionResponse:
      type: object
      properties:
        chain_id:
          type: integer
        position_in_block:
          type: string
        nonce:
          type: string
        block_number:
          type: string
        date_time:
          type: string
          format: date-time
        from:
          type: string
        to:
          type: string
        type:
          type: string
          enum:
            - L1-Deposit
            - L2-Withdrawal
            - Standard
            - Produced Block
            - ERC-20
            - ERC-721
            - ERC-1155
            - internal-tx
        transaction_direction:
          type: string
        block_confirmations:
          type: integer
        finalized:
          type: boolean
        method_id:
          type: string
        method_name:
          type: string
        hash:
          type: object
          properties:
            hash:
              type: string
            transaction_hash:
              type: boolean
            block_hash:
              type: boolean
            source_hash:
              type: string
              format: hex
              description: Uniquely identifies the origin of the Optimism deposit.
        value:
          type: string
        contract_address:
          type: string
        input:
          type: string
        cumulative_gas_used:
          type: string
        is_error:
          type: string
        err_code:
          type: string
        fees:
          type: object
          properties:
            base_fee:
              type: number
            priority_fee:
              type: number
              description: Pre-bedrock block gas prices equal to priority fees since there was no base_fee.
            gas_price_bid:
              type: integer
              description: Gas price bid
              example: 1
            gas_price_paid:
              type: integer
              description: Gas price paid
              example: 12
            gas_used:
              type: integer
              description: Gas used
              example: 1
            poster_fee:
              type: integer
              description: Poster fee
              example: 1
            network_fee:
              type: integer
              description: Network fee
              example: 1
        ethereum_payload:
          type: object
          properties:
            block_confirmations_on_ethereum:
              type: integer
            finalized:
              type: boolean
            transaction_batch_index:
              type: integer
            submission_transaction_hash:
              type: string
              format: hex
            state_batch_index:
              type: integer
            state_root_submission_transaction_hash:
              type: string
              format: hex
            origin_transaction_hash:
              type: string
              format: hex
            fees:
              type: object
              properties:
                gas_price:
                  type: string
                  format: wei
                fee_scalar:
                  type: string
                  format: wei
                gas_used_by_transaction:
                  type: string
                  format: wei
                  description: Gas used by this transaction on Ethereum.(Obsolete after bedrock.)
    EthereumEthstoreResponse:
      type: object
      properties:
        beaconchain_day:
          type: integer
        day_start:
          type: string
        day_end:
          type: string
        epoch_start:
          type: string
        epoch_end:
          type: string
        deposits_sum:
          type: integer
        effective_balances_sum:
          type: integer
        end_balances_sum:
          type: integer
        start_balances_sum:
          type: integer
        rewards:
          type: object
          properties:
            today:
              type: object
              properties:
                consensus_rewards:
                  type: integer
                transaction_rewards:
                  type: integer
                consenus_apr:
                  type: integer
                execution_apr:
                  type: integer
                total_apr:
                  type: integer
            7d_average:
              type: object
              properties:
                consensus_rewards:
                  type: integer
                transaction_rewards:
                  type: integer
                consenus_apr:
                  type: integer
                execution_apr:
                  type: integer
                total_apr:
                  type: integer
            31d_average:
              type: object
              properties:
                consensus_rewards:
                  type: integer
                transaction_rewards:
                  type: integer
                consenus_apr:
                  type: integer
                execution_apr:
                  type: integer
                total_apr:
                  type: integer
    EthereumEthDailyPriceResponse:
      type: object
      properties:
        day:
          type: string
          format: date
        price:
          type: object
          properties:
            eth_eur:
              type: number
            eth_usd:
              type: number
            eth_chf:
              type: number
            eth_aud:
              type: number
            eth_gbp:
              type: number
            eth_gno:
              type: number
            eth_xdai:
              type: number
    EthereumBlockSizeResponse:
      type: object
      properties:
        date:
          type: string
          format: date
        block_size_bytes:
          type: integer
    OptimismBlockSizeResponse:
      type: object
      properties:
        date:
          type: string
          format: date
        block_size_bytes:
          type: integer
    EthereumAccountBalanceResponse:
      type: object
      properties:
        tokens:
          type: object
          properties:
            token_name:
              type: string
            token_address:
              type: string
            balance:
              type: integer
            type:
              type: string
              enum:
                - ETH
                - ERC-20
                - ERC-721
                - ERC-1155
        block_number:
          type: integer
        date_time:
          type: string
          format: date-time
    OptimismAccountBalanceResponse:
      type: object
      properties:
        tokens:
          type: object
          properties:
            token_name:
              type: string
            token_address:
              type: string
            balance:
              type: integer
            type:
              type: string
              enum:
                - ETH
                - ERC-20
                - ERC-721
                - ERC-1155
        block_number:
          type: integer
        date_time:
          type: string
          format: date-time
    EthereumDailyGasUsedResponse:
      type: object
      properties:
        date:
          type: string
        gas_used:
          type: number
    EthereumDailyAvgGasLimitResponse:
      type: object
      properties:
        date:
          type: string
        gas_limit:
          type: number
    EthereumGasNowResponse:
      type: object
      properties:
        rapid:
          type: integer
        fast:
          type: integer
        standard:
          type: integer
        slow:
          type: integer
        date_time:
          type: string
          format: date-time
        eth_usd:
          type: number
    EthereumTokenSupplyHistoryResponse:
      properties:
        token_type:
          type: string
        token_name:
          type: string
        contract_address:
          type: string
        token_supply:
          type: number
        block_number:
          type: string
        date_time:
          type: string
          format: date-time
    OptimismTokenSupplyHistoryResponse:
      properties:
        token_type:
          type: string
        token_name:
          type: string
        contract_address:
          type: string
        token_supply:
          type: number
        block_number:
          type: string
        date_time:
          type: string
          format: date-time
    APIHealthResponse:
      type: object
      properties:
        network:
          type: object
          properties:
            ethereum:
              type: object
              properties:
                last_import:
                  type: string
                node_version:
                  type: string
                notifications:
                  type: object
                  properties:
                    webhook_count:
                      type: integer
                    email_count:
                      type: integer
                    push_count:
                      type: integer
            gnosis:
              type: object
              properties:
                last_import:
                  type: string
                node_version:
                  type: string
                notifications:
                  type: object
                  properties:
                    webhook_count:
                      type: integer
                    email_count:
                      type: integer
                    push_count:
                      type: integer
            optimism:
              type: object
              properties:
                last_import:
                  type: string
                node_version:
                  type: string
                notifications:
                  type: object
                  properties:
                    webhook_count:
                      type: integer
                    email_count:
                      type: integer
                    push_count:
                      type: integer
    EthereumValidatorRewardResponse:
      type: object
      properties:
        validator_index:
          type: integer
        epoch:
          type: integer
        epoch_start_date_time:
          type: string
          format: date-time
        daily:
          type: boolean
        date:
          type: string
          format: date
        rewards:
          $ref: '#/components/schemas/EthereumValidatorReward'
        labels:
          $ref: '#/components/schemas/ValidatorLabels'
    EthereumValidatorReward:
      type: object
      properties:
        total_rewards:
          $ref: '#/components/schemas/ClElNum'
        proposer_rewards:
          $ref: '#/components/schemas/ClElNum'
        consensus_layer_details:
          type: object
          properties:
            attestation_head_reward:
              type: integer
            attestation_source_reward:
              type: integer
            'attestation_source_penalty ':
              type: integer
            attestation_target_reward:
              type: integer
            'attestation_target_penalty ':
              type: integer
            finality_delay_penalty:
              type: integer
            proposer_slashing_inclusion_reward:
              type: integer
            proposer_attestation_inclusion_reward:
              type: integer
            proposer_sync_inclusion_reward:
              type: integer
            sync_committee_reward:
              type: integer
            sync_committee_penalty:
              type: integer
            slashing_reward:
              type: integer
            slashing_penalty:
              type: integer
        execution_layer_details:
          type: object
          properties:
            standard_blocks:
              type: object
              properties:
                count:
                  type: integer
                priority_fees:
                  type: integer
            mev_blocks:
              type: object
              properties:
                count:
                  type: integer
                priority_fees:
                  type: integer
                relay_reported_rewards:
                  type: integer
    EthereumValidatorBalanceResponse:
      type: object
      properties:
        validator_index:
          type: integer
        epoch:
          type: integer
        epoch_start_date_time:
          type: string
          format: date-time
        daily:
          type: boolean
        date:
          type: string
          format: date
        balances:
          $ref: '#/components/schemas/EthereumValidatorBalance'
        labels:
          $ref: '#/components/schemas/ValidatorLabels'
    EthereumValidatorBalance:
      type: object
      properties:
        start_balance:
          type: integer
        start_effective_balance:
          type: integer
        end_balance:
          type: integer
        end_effective_balance:
          type: integer
        beacon_deposits_count:
          type: integer
        beacon_deposits_amount:
          type: integer
        total_beacon_deposits_count:
          type: integer
        total_beacon_deposits_amount:
          type: integer
        contract_deposits_count:
          type: integer
        contract_deposits_amount:
          type: integer
        total_contract_deposits_count:
          type: integer
        total_contract_deposits_amount:
          type: integer
        withdrawals_count:
          type: integer
        withdrawals_amount:
          type: integer
    EthereumValidatorDutiesResponse:
      type: object
      properties:
        validator_index:
          type: integer
        epoch:
          type: integer
        epoch_start_date_time:
          type: string
          format: date-time
        daily:
          type: boolean
        date:
          type: string
          format: date
        duties:
          $ref: '#/components/schemas/EthereumValidatorDuties'
        finality:
          type: string
          enum:
            - not_finalized
            - justified
            - finalized
        labels:
          $ref: '#/components/schemas/ValidatorLabels'
    EthereumValidatorDuties:
      type: object
      properties:
        attestations:
          type: object
          properties:
            scheduled_count:
              type: integer
            executed_timely_head_count:
              type: integer
            executed_timely_target_count:
              type: integer
            executed_timely_source_count:
              type: integer
            executed_rate:
              type: integer
            missed_count:
              type: integer
            efficiency:
              type: integer
        proposals:
          type: object
          properties:
            scheduled_count:
              type: integer
            proposed_count:
              type: integer
            proposed_rate:
              type: integer
            missed_count:
              type: integer
            included_attester_slashings_count:
              type: integer
            included_proposer_slashings_count:
              type: integer
        sync_committee:
          type: object
          properties:
            scheduled_count:
              type: integer
            participated_count:
              type: integer
            participated_rate:
              type: integer
            missed_count:
              type: integer
    MobileSettingsDataResponse:
      type: object
      properties:
        notify_token:
          type: string
    SmartContractVerifyResponse:
      type: object
    SmartContractVerifyErrorMessageResponse:
      type: object
    SubscriptionResponse:
      type: object
      properties:
        createdEpoch:
          type: integer
        createdTime:
          type: string
        eventFilter:
          type: string
        eventName:
          type: string
        eventThreshold:
          type: number
        id:
          type: integer
        lastEpoch:
          type: integer
        lastSent:
          type: string
        state:
          type: string
        unsubscribeHash:
          type: string
        userID:
          type: integer
    OAuthErrorResponse:
      type: object
      properties:
        error:
          type: string
        error_description:
          type: string
    OAuthResponse:
      type: object
      properties:
        access_token:
          type: string
        expires_in:
          type: integer
        refresh_token:
          type: string
        token_type:
          type: string
    StatsDataResponse:
      type: object
      properties:
        node:
          type: object
        system:
          type: object
        validator:
          type: object
    EthereumValidatorStatusesResponse:
      type: object
      properties:
        epoch:
          type: integer
        date:
          type: string
          format: date
        statuses:
          $ref: '#/components/schemas/EthereumValidatorStatuses'
        finality:
          type: string
          enum:
            - not_finalized
            - justified
            - finalized
    EthereumValidatorStatuses:
      type: object
      properties:
        pending:
          type: object
          properties:
            total_pending_count:
              type: integer
            pending_initialized_count:
              type: integer
            pending_queued_count:
              type: integer
        active:
          type: object
          properties:
            total_active_count:
              type: integer
            active_ongoing_count:
              type: integer
            active_exiting_count:
              type: integer
            active_slashed_count:
              type: integer
        exited:
          type: object
          properties:
            total_exited_count:
              type: integer
            exited_unslashed_count:
              type: integer
            exited_slashed_count:
              type: integer
        withdrawal:
          type: object
          properties:
            total_withdrawal_count:
              type: integer
            withdrawal_possible_count:
              type: integer
            withdrawal_done_count:
              type: integer
    BLSChangeResponse:
      type: object
      properties:
        slot:
          type: integer
        slot_date_time:
          type: string
          format: date-time
        epoch:
          type: integer
        block_root:
          type: string
        validator_index:
          type: integer
        bls_public_key:
          type: string
        bls_signature:
          type: string
        address:
          type: string
        withdrawal_credentials_0x00:
          type: string
        withdrawal_credentials_0x01:
          type: string
        finality:
          type: string
          enum:
            - not_finalized
            - justified
            - finalized
    ValidatorLabels:
      type: object
      properties:
        pool_label:
          type: string
        name_label:
          type: string
    QueueResponse:
      type: object
      properties:
        validators:
          type: object
          properties:
            total_count:
              type: integer
            pending_queued_count:
              type: integer
            active_exiting_count:
              type: integer
        deposits:
          type: object
          properties:
            unprocessed_contract_deposits_count:
              type: integer
            unprocessed_contract_deposits_amount:
              type: integer
    PerformanceDataResponse:
      type: object
      properties:
        last_24hours:
          type: object
          properties:
            apr:
              type: object
              properties:
                total:
                  type: integer
                consensus_layer:
                  type: integer
                execution_layer:
                  type: integer
            rewards:
              type: object
              properties:
                total:
                  type: integer
                consensus_layer:
                  type: integer
                execution_layer:
                  type: integer
        7d:
          type: object
          properties:
            apr:
              type: object
              properties:
                total:
                  type: integer
                consensus_layer:
                  type: integer
                execution_layer:
                  type: integer
            rewards:
              type: object
              properties:
                total:
                  type: integer
                consensus_layer:
                  type: integer
                execution_layer:
                  type: integer
        31d:
          type: object
          properties:
            apr:
              type: object
              properties:
                total:
                  type: integer
                consensus_layer:
                  type: integer
                execution_layer:
                  type: integer
            rewards:
              type: object
              properties:
                total:
                  type: integer
                consensus_layer:
                  type: integer
                execution_layer:
                  type: integer
        365d:
          type: object
          properties:
            apr:
              type: object
              properties:
                total:
                  type: integer
                consensus_layer:
                  type: integer
                execution_layer:
                  type: integer
            rewards:
              type: object
              properties:
                total:
                  type: integer
                consensus_layer:
                  type: integer
                execution_layer:
                  type: integer
        total:
          type: object
          properties:
            apr:
              type: object
              properties:
                total:
                  type: integer
                consensus_layer:
                  type: integer
                execution_layer:
                  type: integer
            rewards:
              type: object
              properties:
                total:
                  type: integer
                consensus_layer:
                  type: integer
                execution_layer:
                  type: integer
    PerformanceResponse:
      type: object
      properties:
        validator_index:
          type: integer
        validator_balance:
          type: integer
        rewards:
          $ref: '#/components/schemas/PerformanceDataResponse'
    PublicIdResponse:
      type: object
      properties:
        access_token:
          type: string
        name:
          type: string
        share_settings:
          type: object
          properties:
            group_names:
              type: boolean
    SignatureRequestBody:
      type: object
      properties:
        signature:
          type: string
    SyncCommitteeResponse:
      type: object
      properties:
        period:
          type: integer
        start_epoch:
          type: integer
        'end_epoch ':
          type: integer
        validators:
          type: array
          items:
            type: integer